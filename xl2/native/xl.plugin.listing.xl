// ****************************************************************************
//  xl.plugin.listing.xl            (C) 1992-2004 Christophe de Dinechin (ddd) 
//                                                                 XL2 project 
// ****************************************************************************
// 
//   File Description:
// 
//     Plug-in to show a listing at a given phase
// 
// 
// 
// 
// 
// 
// 
// 
// ****************************************************************************
// This document is released under the GNU General Public License.
// See http://www.gnu.org/copyleft/gpl.html for details
// ****************************************************************************
// * File       : $RCSFile$
// * Revision   : $Revision$
// * Date       : $Date$
// ****************************************************************************

import PT = XL.PARSER.TREE
import XLT = XL.TRANSLATOR
import RD = XL.RENDERER
import SYM = XL.SYMBOLS


module XL.PLUGIN.LISTING is
// ----------------------------------------------------------------------------
//    Encapsulating module (not really necessary)
// ----------------------------------------------------------------------------

    translation Listing
    // ------------------------------------------------------------------------
    //    Translations below a 'Listing' pragma
    // ------------------------------------------------------------------------

        when
           'Anything'
        then
           pragma : PT.tree := SYM.GetProperty(XLT.context, "PRAGMA")
           format : text := XLT.RuntimePath("xl.stylesheet")
           syntax : text := XLT.RuntimePath("xl.syntax")
           translate pragma
               when ('Base' 'Style' 'Stx') where (Style.kind = PT.xlTEXT and
                                                  Stx.kind = PT.xlTEXT) then
                   style_name : Style as PT.text_tree
                   syntax_name : Stx as PT.text_tree
                   format := XLT.RuntimePath(style_name.value + ".stylesheet")
                   syntax := XLT.RuntimePath(syntax_name.value + ".syntax")
                   Base := Base

               when ('Base' 'Style') where Style.kind = PT.xlTEXT then
                   style_name : Style as PT.text_tree
                   format := XLT.RuntimePath(style_name.value + ".stylesheet")
                   Base := Base

           R : RD.renderer := RD.Open(format, syntax)
           RD.Render R, input
           RD.Close R


