#include <stdio.h>
typedef char                   xlint8;
typedef short                  xlint16;
typedef int                    xlint32;
typedef long long              xlint64;
typedef unsigned char          xluint8;
typedef unsigned short         xluint16;
typedef unsigned int           xluint32;
typedef unsigned long long     xluint64;
typedef float                  xlreal32;
typedef double                 xlreal64;
typedef int                    xlint;
typedef unsigned               xluint;
typedef double                 xlreal;
typedef char                   xlbool;
typedef char                   xlchar;
typedef const char *           xltext;
typedef void *                 xlptr;
typedef struct {} /* !ANSIC */ xlrecord, xlmodule;
typedef FILE *                 xlfile;
xlfile xl_getstdfile(int n) {
  switch(n) {
    case 0: return stdin;
    case 1: return stdout;
    case 2: return stderr;
  }
  return NULL;
}
typedef struct Record_1245 {
  xlmodule baserecord_1; /* RecF */
} Record_1245;
Record_1245 xlbuiltins_1246; /* Global */
typedef xlint (*FnPtr_1249) ( xlint b_1248 ) ;
xlint makeit_1250 ( xlint b_1248 ) ;
typedef xlreal (*FnPtr_1253) ( xlreal b_1252 ) ;
xlreal makeit_1254 ( xlreal b_1252 ) ;
typedef void (*FnPtr_1261) ( ) ;
void test_1262 ( ) ;
typedef struct Record_1267 {
  xlrecord baserecord_1263; /* RecF */
  xlint a_1264; /* RecF */
  xlint b_1265; /* RecF */
} Record_1267;
typedef Record_1267 (*FnPtr_1270) ( Record_1267 source_1269 ) ;
Record_1267 copy_1271 ( Record_1267 source_1269 ) ;
Record_1267 crapal_1272; /* Global */
Record_1267 fungoid_1273; /* Global */
typedef void (*FnPtr_1274) ( ) ;
void testoperators_1275 ( ) ;
typedef Record_1267 (*FnPtr_1290) ( Record_1267 b_1289 ) ;
Record_1267 makeit_1291 ( Record_1267 b_1289 ) ;
Record_1267 znort_1293; /* Global */
Record_1267 outret_1294; /* Ret */
Record_1267 outret_1295; /* Ret */
xlint makeit_1250 ( xlint b_1248 ) {
xlint a_1247; /* Out=Ret */
a_1247 = b_1248;
exit_makeit_1250: 0;
return a_1247;
}
xlreal makeit_1254 ( xlreal b_1252 ) {
xlreal a_1251; /* Out=Ret */
a_1251 = b_1252;
exit_makeit_1254: 0;
return a_1251;
}
void test_1262 ( ) {
xlint zero_1276; /* Local */
xlint outret_1277; /* Ret */
xlint glop_1278; /* Local */
xlint outret_1279; /* Ret */
xlreal glap_1280; /* Local */
xlreal outret_1281; /* Ret */
xlint outret_1282; /* Ret */
xlreal outret_1283; /* Ret */
outret_1277 = makeit_1250 ( 1 );
zero_1276 = outret_1277;
outret_1279 = makeit_1250 ( 2 );
glop_1278 = outret_1279;
outret_1281 = makeit_1254 ( 1.5 );
glap_1280 = outret_1281;
outret_1282 = makeit_1250 ( 3 );
glop_1278 = outret_1282;
outret_1283 = makeit_1254 ( 6.3 );
glap_1280 = outret_1283;
exit_test_1262: 0;
}
Record_1267 copy_1271 ( Record_1267 source_1269 ) {
Record_1267 target_1268; /* Out=Ret */
/* xlint fld_1284; Ref */
/* xlint fld_1285; Ref */
/* xlint fld_1286; Ref */
/* xlint fld_1287; Ref */
#define fld_1285 (target_1268.a_1264)
#define fld_1284 (source_1269.b_1265)
fld_1285 = fld_1284;
#define fld_1287 (target_1268.b_1265)
#define fld_1286 (source_1269.a_1264)
fld_1287 = fld_1286;
exit_copy_1271: 0;
return target_1268;
}
Record_1267 makeit_1291 ( Record_1267 b_1289 ) {
Record_1267 a_1288; /* Out=Ret */
Record_1267 outret_1292; /* Ret */
outret_1292 = copy_1271 ( b_1289 );
a_1288 = outret_1292;
exit_makeit_1291: 0;
return a_1288;
}
void testoperators_1275 ( ) {
xlint bingo_1296; /* Local */
xlint outret_1297; /* Ret */
xlreal bonga_1298; /* Local */
xlreal outret_1299; /* Ret */
Record_1267 blatoid_1300; /* Local */
Record_1267 outret_1301; /* Ret */
outret_1297 = makeit_1250 ( 1 );
bingo_1296 = outret_1297;
outret_1299 = makeit_1254 ( 2.3 );
bonga_1298 = outret_1299;
outret_1301 = makeit_1291 ( fungoid_1273 );
blatoid_1300 = outret_1301;
exit_testoperators_1275: 0;
}
int main(int _argc, char **_argv)
{
Record_1267 outret_1294; /* Ret */
Record_1267 outret_1295; /* Ret */
/* Type */
outret_1294 = makeit_1291 ( crapal_1272 );
znort_1293 = outret_1294;
outret_1295 = makeit_1291 ( fungoid_1273 );
znort_1293 = outret_1295;
    /* Main */
    return 0;
}
/*end*/
