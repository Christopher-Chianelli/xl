#define XLINIT 1
#include "xl_lib.h"
typedef char Int8;
typedef short Int16;
typedef int Int32;
typedef unsigned char UInt8;
typedef unsigned short UInt16;
typedef unsigned int UInt32;
typedef float Real32;
typedef double Real64;
typedef /*long - causes GCC warning*/ double Real80;
typedef Int32 Int;
typedef UInt32 UInt;
typedef Real64 Real;
typedef char Bool;
typedef wchar_t Char;
typedef ::text Text;
typedef struct {} Rec, Mod;
Bool equalint_3 ( Int a_1 , Int b_2 ) ;
Int copyint_6 ( Int src_5 ) ;
Int a_7; /* Global */
void XL_Init() {
Bool ret_9; /* Temp */
ret_9 = a_7 == 0;
if(!(ret_9)) goto else_if_8;
{
a_7 = 1;
}
goto endif_if_8;
else_if_8: 0;
endif_if_8: 0;
}
void XL_Term() {
Bool ret_9; /* Temp */
}
namespace xl { namespace ui { namespace console {
std::vector< ::text > arguments;
}}}
void XLMain() {
   XL_Init();
   XL_Term();
}
namespace xl { namespace translator {
void pluginsinit() {

}
}}
void XLInit() {

}
void XLTerm() {

}
char XLTrace[1] = { 0 };
void XLTraceInit(int Argc, char **Argv) {
int Arg; for (Arg = 1; Arg < Argc; Arg++) {
::text N = Argv[Arg];
}}
/*end*/
