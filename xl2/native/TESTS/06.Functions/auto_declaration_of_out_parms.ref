#include <stdio.h>
typedef char                   xlint8;
typedef short                  xlint16;
typedef int                    xlint32;
typedef long long              xlint64;
typedef unsigned char          xluint8;
typedef unsigned short         xluint16;
typedef unsigned int           xluint32;
typedef unsigned long long     xluint64;
typedef float                  xlreal32;
typedef double                 xlreal64;
typedef int                    xlint;
typedef unsigned               xluint;
typedef double                 xlreal;
typedef char                   xlbool;
typedef char                   xlchar;
typedef const char *           xltext;
typedef void *                 xlptr;
typedef struct {} /* !ANSIC */ xlrecord, xlmodule;
typedef FILE *                 xlfile;
xlfile xl_getstdfile(int n) {
  switch(n) {
    case 0: return stdin;
    case 1: return stdout;
    case 2: return stderr;
  }
  return NULL;
}
typedef struct Record_970 {
  xlmodule baserecord_1; /* RecF */
} Record_970;
Record_970 xlbuiltins_971; /* Global */
typedef xlint (*FnPtr_974) ( xlint b_973 ) ;
xlint makeit_975 ( xlint b_973 ) ;
typedef xlreal (*FnPtr_978) ( xlreal b_977 ) ;
xlreal makeit_979 ( xlreal b_977 ) ;
typedef void (*FnPtr_986) ( ) ;
void test_987 ( ) ;
typedef struct Record_992 {
  xlrecord baserecord_988; /* RecF */
  xlint a_989; /* RecF */
  xlint b_990; /* RecF */
} Record_992;
typedef Record_992 (*FnPtr_995) ( Record_992 source_994 ) ;
Record_992 copy_996 ( Record_992 source_994 ) ;
Record_992 crapal_997; /* Global */
Record_992 fungoid_998; /* Global */
typedef void (*FnPtr_999) ( ) ;
void testoperators_1000 ( ) ;
typedef Record_992 (*FnPtr_1015) ( Record_992 b_1014 ) ;
Record_992 makeit_1016 ( Record_992 b_1014 ) ;
Record_992 znort_1018; /* Global */
Record_992 outret_1019; /* Ret */
Record_992 outret_1020; /* Ret */
xlint makeit_975 ( xlint b_973 ) {
xlint a_972; /* Out=Ret */
a_972 = b_973;
exit_makeit_975: 0;
return a_972;
}
xlreal makeit_979 ( xlreal b_977 ) {
xlreal a_976; /* Out=Ret */
a_976 = b_977;
exit_makeit_979: 0;
return a_976;
}
void test_987 ( ) {
xlint zero_1001; /* Local */
xlint outret_1002; /* Ret */
xlint glop_1003; /* Local */
xlint outret_1004; /* Ret */
xlreal glap_1005; /* Local */
xlreal outret_1006; /* Ret */
xlint outret_1007; /* Ret */
xlreal outret_1008; /* Ret */
outret_1002 = makeit_975 ( 1 );
zero_1001 = outret_1002;
outret_1004 = makeit_975 ( 2 );
glop_1003 = outret_1004;
outret_1006 = makeit_979 ( 1.5 );
glap_1005 = outret_1006;
outret_1007 = makeit_975 ( 3 );
glop_1003 = outret_1007;
outret_1008 = makeit_979 ( 6.3 );
glap_1005 = outret_1008;
exit_test_987: 0;
}
Record_992 copy_996 ( Record_992 source_994 ) {
Record_992 target_993; /* Out=Ret */
/* xlint fld_1009; Ref */
/* xlint fld_1010; Ref */
/* xlint fld_1011; Ref */
/* xlint fld_1012; Ref */
#define fld_1010 (target_993.a_989)
#define fld_1009 (source_994.b_990)
fld_1010 = fld_1009;
#define fld_1012 (target_993.b_990)
#define fld_1011 (source_994.a_989)
fld_1012 = fld_1011;
exit_copy_996: 0;
return target_993;
}
Record_992 makeit_1016 ( Record_992 b_1014 ) {
Record_992 a_1013; /* Out=Ret */
Record_992 outret_1017; /* Ret */
outret_1017 = copy_996 ( b_1014 );
a_1013 = outret_1017;
exit_makeit_1016: 0;
return a_1013;
}
void testoperators_1000 ( ) {
xlint bingo_1021; /* Local */
xlint outret_1022; /* Ret */
xlreal bonga_1023; /* Local */
xlreal outret_1024; /* Ret */
outret_1022 = makeit_975 ( 1 );
bingo_1021 = outret_1022;
outret_1024 = makeit_979 ( 2.3 );
bonga_1023 = outret_1024;
exit_testoperators_1000: 0;
}
int main(int _argc, char **_argv)
{
Record_992 outret_1019; /* Ret */
Record_992 outret_1020; /* Ret */
/* Type */
outret_1019 = makeit_1016 ( crapal_997 );
znort_1018 = outret_1019;
outret_1020 = makeit_1016 ( fungoid_998 );
znort_1018 = outret_1020;
    /* Main */
    return 0;
}
/*end*/
