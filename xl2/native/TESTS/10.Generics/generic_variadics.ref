#include <stdio.h>
typedef char                   xlint8;
typedef short                  xlint16;
typedef int                    xlint32;
typedef long long              xlint64;
typedef unsigned char          xluint8;
typedef unsigned short         xluint16;
typedef unsigned int           xluint32;
typedef unsigned long long     xluint64;
typedef float                  xlreal32;
typedef double                 xlreal64;
typedef int                    xlint;
typedef unsigned               xluint;
typedef double                 xlreal;
typedef char                   xlbool;
typedef char                   xlchar;
typedef const char *           xltext;
typedef void *                 xlptr;
typedef struct {} /* !ANSIC */ xlrecord, xlmodule;
typedef FILE *                 xlfile;
xlfile xl_getstdfile(int n) {
  switch(n) {
    case 0: return stdin;
    case 1: return stdout;
    case 2: return stderr;
  }
  return NULL;
}
typedef struct Record_970 {
  xlmodule baserecord_1; /* RecF */
} Record_970;
Record_970 xlbuiltins_971; /* Global */
xlint ret_1024; /* Temp */
xlint ret_1025; /* Temp */
xlint k_981; /* Global */
xlint l_982; /* Global */
xlreal m_983; /* Global */
xlreal z_984; /* Global */
typedef xlint (*FnPtr_994) ( xlint x_990 , xlint var987_991 , xlint var988_992 , xlint var989_993 ) ;
xlint max_995 ( xlint x_990 , xlint var987_991 , xlint var988_992 , xlint var989_993 ) ;
typedef xlint (*FnPtr_1002) ( xlint x_999 , xlint var997_1000 , xlint var998_1001 ) ;
xlint max_1003 ( xlint x_999 , xlint var997_1000 , xlint var998_1001 ) ;
typedef xlint (*FnPtr_1008) ( xlint x_1006 , xlint var1005_1007 ) ;
xlint max_1009 ( xlint x_1006 , xlint var1005_1007 ) ;
typedef xlint (*FnPtr_1012) ( xlint x_1011 ) ;
xlint max_1013 ( xlint x_1011 ) ;
typedef xlreal (*FnPtr_1031) ( xlreal x_1028 , xlreal var1026_1029 , xlreal var1027_1030 ) ;
xlreal max_1032 ( xlreal x_1028 , xlreal var1026_1029 , xlreal var1027_1030 ) ;
typedef xlreal (*FnPtr_1037) ( xlreal x_1035 , xlreal var1034_1036 ) ;
xlreal max_1038 ( xlreal x_1035 , xlreal var1034_1036 ) ;
typedef xlreal (*FnPtr_1041) ( xlreal x_1040 ) ;
xlreal max_1042 ( xlreal x_1040 ) ;
xlreal ret_1050; /* Temp */
xlreal ret_1051; /* Temp */
xlint max_1013 ( xlint x_1011 ) {
xlint result_1014; /* Result */
result_1014 = x_1011;
goto exit_max_1013;
exit_max_1013: 0;
return result_1014;
}
xlint max_1009 ( xlint x_1006 , xlint var1005_1007 ) {
xlint ret_1015; /* Temp */
xlbool ret_1017; /* Temp */
xlint result_1010; /* Result */
ret_1015 = max_1013 ( var1005_1007 );
result_1010 = ret_1015;
ret_1017 = result_1010 < x_1006;
if(!(ret_1017)) goto else_if_1016;
result_1010 = x_1006;
else_if_1016: 0;
exit_max_1009: 0;
return result_1010;
}
xlint max_1003 ( xlint x_999 , xlint var997_1000 , xlint var998_1001 ) {
xlint ret_1018; /* Temp */
xlbool ret_1020; /* Temp */
xlint result_1004; /* Result */
ret_1018 = max_1009 ( var997_1000 , var998_1001 );
result_1004 = ret_1018;
ret_1020 = result_1004 < x_999;
if(!(ret_1020)) goto else_if_1019;
result_1004 = x_999;
else_if_1019: 0;
exit_max_1003: 0;
return result_1004;
}
xlint max_995 ( xlint x_990 , xlint var987_991 , xlint var988_992 , xlint var989_993 ) {
xlint ret_1021; /* Temp */
xlbool ret_1023; /* Temp */
xlint result_996; /* Result */
ret_1021 = max_1003 ( var987_991 , var988_992 , var989_993 );
result_996 = ret_1021;
ret_1023 = result_996 < x_990;
if(!(ret_1023)) goto else_if_1022;
result_996 = x_990;
else_if_1022: 0;
exit_max_995: 0;
return result_996;
}
xlreal max_1042 ( xlreal x_1040 ) {
xlreal result_1043; /* Result */
result_1043 = x_1040;
goto exit_max_1042;
exit_max_1042: 0;
return result_1043;
}
xlreal max_1038 ( xlreal x_1035 , xlreal var1034_1036 ) {
xlreal ret_1044; /* Temp */
xlbool ret_1046; /* Temp */
xlreal result_1039; /* Result */
ret_1044 = max_1042 ( var1034_1036 );
result_1039 = ret_1044;
ret_1046 = result_1039 < x_1035;
if(!(ret_1046)) goto else_if_1045;
result_1039 = x_1035;
else_if_1045: 0;
exit_max_1038: 0;
return result_1039;
}
xlreal max_1032 ( xlreal x_1028 , xlreal var1026_1029 , xlreal var1027_1030 ) {
xlreal ret_1047; /* Temp */
xlbool ret_1049; /* Temp */
xlreal result_1033; /* Result */
ret_1047 = max_1038 ( var1026_1029 , var1027_1030 );
result_1033 = ret_1047;
ret_1049 = result_1033 < x_1028;
if(!(ret_1049)) goto else_if_1048;
result_1033 = x_1028;
else_if_1048: 0;
exit_max_1032: 0;
return result_1033;
}
int main(int _argc, char **_argv)
{
xlint ret_1024; /* Temp */
xlint ret_1025; /* Temp */
xlreal ret_1050; /* Temp */
xlreal ret_1051; /* Temp */
ret_1024 = max_995 ( 1 , 2 , 3 , 4 );
k_981 = ret_1024;
ret_1025 = max_1003 ( 1 , 2 , 3 );
l_982 = ret_1025;
ret_1050 = max_1032 ( 1.5 , 7.9 , 8.43 );
m_983 = ret_1050;
ret_1051 = max_1032 ( 0 , 0 , 0.1 );
z_984 = ret_1051;
/* Type */
    /* Main */
    return 0;
}
/*end*/
