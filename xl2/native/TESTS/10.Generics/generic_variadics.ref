#include <stdio.h>
typedef char                   xlint8;
typedef short                  xlint16;
typedef int                    xlint32;
typedef long long              xlint64;
typedef unsigned char          xluint8;
typedef unsigned short         xluint16;
typedef unsigned int           xluint32;
typedef unsigned long long     xluint64;
typedef float                  xlreal32;
typedef double                 xlreal64;
typedef int                    xlint;
typedef unsigned               xluint;
typedef double                 xlreal;
typedef char                   xlbool;
typedef char                   xlchar;
typedef const char *           xltext;
typedef void *                 xlptr;
typedef struct {}              xlrecord, xlmodule;
typedef FILE *                 xlfile;
typedef struct Record_948 {
  xlmodule base_1;
} Record_948;
Record_948 xlbuiltins_949; /* Global */
xlint ret_1000; /* Temp */
xlint ret_1001; /* Temp */
xlint k_959; /* Global */
xlint l_960; /* Global */
xlreal m_961; /* Global */
xlreal z_962; /* Global */
typedef xlint (*FnPtr_970) ( xlint x_966 , xlint variadic963_967 , xlint variadic964_968 , xlint variadic965_969 ) ;
xlint max_971 ( xlint x_966 , xlint variadic963_967 , xlint variadic964_968 , xlint variadic965_969 ) ;
typedef xlint (*FnPtr_978) ( xlint x_975 , xlint variadic973_976 , xlint variadic974_977 ) ;
xlint max_979 ( xlint x_975 , xlint variadic973_976 , xlint variadic974_977 ) ;
typedef xlint (*FnPtr_984) ( xlint x_982 , xlint variadic981_983 ) ;
xlint max_985 ( xlint x_982 , xlint variadic981_983 ) ;
typedef xlint (*FnPtr_988) ( xlint x_987 ) ;
xlint max_989 ( xlint x_987 ) ;
typedef xlreal (*FnPtr_1007) ( xlreal x_1004 , xlreal variadic1002_1005 , xlreal variadic1003_1006 ) ;
xlreal max_1008 ( xlreal x_1004 , xlreal variadic1002_1005 , xlreal variadic1003_1006 ) ;
typedef xlreal (*FnPtr_1013) ( xlreal x_1011 , xlreal variadic1010_1012 ) ;
xlreal max_1014 ( xlreal x_1011 , xlreal variadic1010_1012 ) ;
typedef xlreal (*FnPtr_1017) ( xlreal x_1016 ) ;
xlreal max_1018 ( xlreal x_1016 ) ;
xlreal ret_1026; /* Temp */
xlreal ret_1027; /* Temp */
xlint max_989 ( xlint x_987 ) {
xlint result_990; /* Result */
result_990 = x_987;
goto exit_max_989;
exit_max_989: 0;
return result_990;
}
xlint max_985 ( xlint x_982 , xlint variadic981_983 ) {
xlint ret_991; /* Temp */
xlbool ret_993; /* Temp */
xlint result_986; /* Result */
ret_991 = max_989 ( variadic981_983 );
result_986 = ret_991;
ret_993 = result_986 < x_982;
if(!(ret_993)) goto else_if_992;
result_986 = x_982;
else_if_992: 0;
exit_max_985: 0;
return result_986;
}
xlint max_979 ( xlint x_975 , xlint variadic973_976 , xlint variadic974_977 ) {
xlint ret_994; /* Temp */
xlbool ret_996; /* Temp */
xlint result_980; /* Result */
ret_994 = max_985 ( variadic973_976 , variadic974_977 );
result_980 = ret_994;
ret_996 = result_980 < x_975;
if(!(ret_996)) goto else_if_995;
result_980 = x_975;
else_if_995: 0;
exit_max_979: 0;
return result_980;
}
xlint max_971 ( xlint x_966 , xlint variadic963_967 , xlint variadic964_968 , xlint variadic965_969 ) {
xlint ret_997; /* Temp */
xlbool ret_999; /* Temp */
xlint result_972; /* Result */
ret_997 = max_979 ( variadic963_967 , variadic964_968 , variadic965_969 );
result_972 = ret_997;
ret_999 = result_972 < x_966;
if(!(ret_999)) goto else_if_998;
result_972 = x_966;
else_if_998: 0;
exit_max_971: 0;
return result_972;
}
xlreal max_1018 ( xlreal x_1016 ) {
xlreal result_1019; /* Result */
result_1019 = x_1016;
goto exit_max_1018;
exit_max_1018: 0;
return result_1019;
}
xlreal max_1014 ( xlreal x_1011 , xlreal variadic1010_1012 ) {
xlreal ret_1020; /* Temp */
xlbool ret_1022; /* Temp */
xlreal result_1015; /* Result */
ret_1020 = max_1018 ( variadic1010_1012 );
result_1015 = ret_1020;
ret_1022 = result_1015 < x_1011;
if(!(ret_1022)) goto else_if_1021;
result_1015 = x_1011;
else_if_1021: 0;
exit_max_1014: 0;
return result_1015;
}
xlreal max_1008 ( xlreal x_1004 , xlreal variadic1002_1005 , xlreal variadic1003_1006 ) {
xlreal ret_1023; /* Temp */
xlbool ret_1025; /* Temp */
xlreal result_1009; /* Result */
ret_1023 = max_1014 ( variadic1002_1005 , variadic1003_1006 );
result_1009 = ret_1023;
ret_1025 = result_1009 < x_1004;
if(!(ret_1025)) goto else_if_1024;
result_1009 = x_1004;
else_if_1024: 0;
exit_max_1008: 0;
return result_1009;
}
int main(int _argc, char **_argv)
{
xlint ret_1000; /* Temp */
xlint ret_1001; /* Temp */
xlreal ret_1026; /* Temp */
xlreal ret_1027; /* Temp */
ret_1000 = max_971 ( 1 , 2 , 3 , 4 );
k_959 = ret_1000;
ret_1001 = max_979 ( 1 , 2 , 3 );
l_960 = ret_1001;
ret_1026 = max_1008 ( 1.5 , 7.9 , 8.43 );
m_961 = ret_1026;
ret_1027 = max_1008 ( 0 , 0 , 0.1 );
z_962 = ret_1027;
/* Type */
    /* Main */
    return 0;
}
/*end*/
