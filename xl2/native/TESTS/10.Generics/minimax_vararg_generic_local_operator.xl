// The quintessential XL test now passes :-)
use XL.UI.CONSOLE

generic type ordered where
    A, B : ordered
    Test : boolean := A < B

function Max (X : ordered) return ordered is
    return X

function Max (X : ordered; ...) return ordered is
    result := Max(...)
    if result < X then
        result := X

Test_integer : integer := Max(1, 2, 4, 6)
Test_real : real := Max (1.5, -2.6, 2.7, 8.41, 2.21)
Test_integer1 : integer := Max(1)
Test_real1 : real := Max (2.21)
Test_integer2 : integer := Max(1, 817)
Test_real2 : real := Max (2.21, 4.441e-3)

type complex is record with
   re, im : integer

function complex(re, im : integer) return complex is
    result.re := re
    result.im := im

Z1 : complex := complex(1, 5)
Z2 : complex := complex(2, 7)

function LessThan(X, Y : complex) return boolean written X < Y is
    return X.re < Y.im

to Copy(out X: complex; Y : complex) written X := Y is
    X.re := Y.re
    X.im := Y.im

U : complex := Max(z1)
V : complex := Max(Z1, Z_2)

WriteLn "Max U.re=", U.re, " U.im=", U.im
WriteLn "Max V.re=", V.re, " V.im=", V.im
