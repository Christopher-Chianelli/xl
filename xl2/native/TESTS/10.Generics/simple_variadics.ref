#include <stdio.h>
typedef char                   xlint8;
typedef short                  xlint16;
typedef int                    xlint32;
typedef long long              xlint64;
typedef unsigned char          xluint8;
typedef unsigned short         xluint16;
typedef unsigned int           xluint32;
typedef unsigned long long     xluint64;
typedef float                  xlreal32;
typedef double                 xlreal64;
typedef int                    xlint;
typedef unsigned               xluint;
typedef double                 xlreal;
typedef char                   xlbool;
typedef char                   xlchar;
typedef const char *           xltext;
typedef void *                 xlptr;
typedef struct {} /* !ANSIC */ xlrecord, xlmodule;
typedef FILE *                 xlfile;
xlfile xl_getstdfile(int n) {
  switch(n) {
    case 0: return stdin;
    case 1: return stdout;
    case 2: return stderr;
  }
  return NULL;
}
typedef struct Record_970 {
  xlmodule baserecord_1; /* RecF */
} Record_970;
Record_970 xlbuiltins_971; /* Global */
typedef xlint (*FnPtr_973) ( xlint x_972 ) ;
xlint max_974 ( xlint x_972 ) ;
xlint k_979; /* Global */
xlint l_980; /* Global */
typedef xlint (*FnPtr_990) ( xlint x_986 , xlint var983_987 , xlint var984_988 , xlint var985_989 ) ;
xlint max_991 ( xlint x_986 , xlint var983_987 , xlint var984_988 , xlint var985_989 ) ;
typedef xlint (*FnPtr_998) ( xlint x_995 , xlint var993_996 , xlint var994_997 ) ;
xlint max_999 ( xlint x_995 , xlint var993_996 , xlint var994_997 ) ;
typedef xlint (*FnPtr_1004) ( xlint x_1002 , xlint var1001_1003 ) ;
xlint max_1005 ( xlint x_1002 , xlint var1001_1003 ) ;
xlint ret_1016; /* Temp */
xlint ret_1017; /* Temp */
xlint max_974 ( xlint x_972 ) {
xlint result_981; /* Result */
result_981 = x_972;
goto exit_max_974;
exit_max_974: 0;
return result_981;
}
xlint max_1005 ( xlint x_1002 , xlint var1001_1003 ) {
xlint ret_1007; /* Temp */
xlbool ret_1009; /* Temp */
xlint result_1006; /* Result */
ret_1007 = max_974 ( var1001_1003 );
result_1006 = ret_1007;
ret_1009 = result_1006 < x_1002;
if(!(ret_1009)) goto else_if_1008;
result_1006 = x_1002;
else_if_1008: 0;
exit_max_1005: 0;
return result_1006;
}
xlint max_999 ( xlint x_995 , xlint var993_996 , xlint var994_997 ) {
xlint ret_1010; /* Temp */
xlbool ret_1012; /* Temp */
xlint result_1000; /* Result */
ret_1010 = max_1005 ( var993_996 , var994_997 );
result_1000 = ret_1010;
ret_1012 = result_1000 < x_995;
if(!(ret_1012)) goto else_if_1011;
result_1000 = x_995;
else_if_1011: 0;
exit_max_999: 0;
return result_1000;
}
xlint max_991 ( xlint x_986 , xlint var983_987 , xlint var984_988 , xlint var985_989 ) {
xlint ret_1013; /* Temp */
xlbool ret_1015; /* Temp */
xlint result_992; /* Result */
ret_1013 = max_999 ( var983_987 , var984_988 , var985_989 );
result_992 = ret_1013;
ret_1015 = result_992 < x_986;
if(!(ret_1015)) goto else_if_1014;
result_992 = x_986;
else_if_1014: 0;
exit_max_991: 0;
return result_992;
}
int main(int _argc, char **_argv)
{
xlint ret_1016; /* Temp */
xlint ret_1017; /* Temp */
ret_1016 = max_991 ( 1 , 2 , 3 , 4 );
k_979 = ret_1016;
ret_1017 = max_999 ( 1 , 2 , 3 );
l_980 = ret_1017;
    /* Main */
    return 0;
}
/*end*/
