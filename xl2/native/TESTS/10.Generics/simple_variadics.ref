#include <stdio.h>
typedef char                   xlint8;
typedef short                  xlint16;
typedef int                    xlint32;
typedef long long              xlint64;
typedef unsigned char          xluint8;
typedef unsigned short         xluint16;
typedef unsigned int           xluint32;
typedef unsigned long long     xluint64;
typedef float                  xlreal32;
typedef double                 xlreal64;
typedef int                    xlint;
typedef unsigned               xluint;
typedef double                 xlreal;
typedef char                   xlbool;
typedef char                   xlchar;
typedef const char *           xltext;
typedef void *                 xlptr;
typedef struct {} /* !ANSIC */ xlrecord, xlmodule;
typedef FILE *                 xlfile;
xlfile xl_getstdfile(int n) {
  switch(n) {
    case 0: return stdin;
    case 1: return stdout;
    case 2: return stderr;
  }
  return NULL;
}
typedef struct Record_1245 {
  xlmodule baserecord_1; /* RecF */
} Record_1245;
Record_1245 xlbuiltins_1246; /* Global */
typedef xlint (*FnPtr_1248) ( xlint x_1247 ) ;
xlint max_1249 ( xlint x_1247 ) ;
xlint k_1254; /* Global */
xlint l_1255; /* Global */
typedef xlint (*FnPtr_1265) ( xlint x_1261 , xlint var1258_1262 , xlint var1259_1263 , xlint var1260_1264 ) ;
xlint max_1266 ( xlint x_1261 , xlint var1258_1262 , xlint var1259_1263 , xlint var1260_1264 ) ;
typedef xlint (*FnPtr_1273) ( xlint x_1270 , xlint var1268_1271 , xlint var1269_1272 ) ;
xlint max_1274 ( xlint x_1270 , xlint var1268_1271 , xlint var1269_1272 ) ;
typedef xlint (*FnPtr_1279) ( xlint x_1277 , xlint var1276_1278 ) ;
xlint max_1280 ( xlint x_1277 , xlint var1276_1278 ) ;
xlint ret_1291; /* Temp */
xlint ret_1292; /* Temp */
xlint max_1249 ( xlint x_1247 ) {
xlint result_1256; /* Result */
result_1256 = x_1247;
goto exit_max_1249;
exit_max_1249: 0;
return result_1256;
}
xlint max_1280 ( xlint x_1277 , xlint var1276_1278 ) {
xlint ret_1282; /* Temp */
xlbool ret_1284; /* Temp */
xlint result_1281; /* Result */
ret_1282 = max_1249 ( var1276_1278 );
result_1281 = ret_1282;
ret_1284 = result_1281 < x_1277;
if(!(ret_1284)) goto else_if_1283;
result_1281 = x_1277;
else_if_1283: 0;
exit_max_1280: 0;
return result_1281;
}
xlint max_1274 ( xlint x_1270 , xlint var1268_1271 , xlint var1269_1272 ) {
xlint ret_1285; /* Temp */
xlbool ret_1287; /* Temp */
xlint result_1275; /* Result */
ret_1285 = max_1280 ( var1268_1271 , var1269_1272 );
result_1275 = ret_1285;
ret_1287 = result_1275 < x_1270;
if(!(ret_1287)) goto else_if_1286;
result_1275 = x_1270;
else_if_1286: 0;
exit_max_1274: 0;
return result_1275;
}
xlint max_1266 ( xlint x_1261 , xlint var1258_1262 , xlint var1259_1263 , xlint var1260_1264 ) {
xlint ret_1288; /* Temp */
xlbool ret_1290; /* Temp */
xlint result_1267; /* Result */
ret_1288 = max_1274 ( var1258_1262 , var1259_1263 , var1260_1264 );
result_1267 = ret_1288;
ret_1290 = result_1267 < x_1261;
if(!(ret_1290)) goto else_if_1289;
result_1267 = x_1261;
else_if_1289: 0;
exit_max_1266: 0;
return result_1267;
}
int main(int _argc, char **_argv)
{
xlint ret_1291; /* Temp */
xlint ret_1292; /* Temp */
ret_1291 = max_1266 ( 1 , 2 , 3 , 4 );
k_1254 = ret_1291;
ret_1292 = max_1274 ( 1 , 2 , 3 );
l_1255 = ret_1292;
    /* Main */
    return 0;
}
/*end*/
