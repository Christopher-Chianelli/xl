#include <stdio.h>
typedef char                   xlint8;
typedef short                  xlint16;
typedef int                    xlint32;
typedef long long              xlint64;
typedef unsigned char          xluint8;
typedef unsigned short         xluint16;
typedef unsigned int           xluint32;
typedef unsigned long long     xluint64;
typedef float                  xlreal32;
typedef double                 xlreal64;
typedef int                    xlint;
typedef unsigned               xluint;
typedef double                 xlreal;
typedef char                   xlbool;
typedef char                   xlchar;
typedef const char *           xltext;
typedef void *                 xlptr;
typedef struct {} /* !ANSIC */ xlrecord, xlmodule;
typedef FILE *                 xlfile;
xlfile xl_getstdfile(int n) {
  switch(n) {
    case 0: return stdin;
    case 1: return stdout;
    case 2: return stderr;
  }
  return NULL;
}
typedef struct Record_1277 {
  xlmodule baserecord_1; /* RecF */
} Record_1277;
Record_1277 xlbuiltins_1278; /* Global */
typedef xlint (*FnPtr_1280) ( xlint x_1279 ) ;
xlint max_1281 ( xlint x_1279 ) ;
xlint k_1286; /* Global */
xlint l_1287; /* Global */
typedef xlint (*FnPtr_1297) ( xlint x_1293 , xlint var1290_1294 , xlint var1291_1295 , xlint var1292_1296 ) ;
xlint max_1298 ( xlint x_1293 , xlint var1290_1294 , xlint var1291_1295 , xlint var1292_1296 ) ;
typedef xlint (*FnPtr_1305) ( xlint x_1302 , xlint var1300_1303 , xlint var1301_1304 ) ;
xlint max_1306 ( xlint x_1302 , xlint var1300_1303 , xlint var1301_1304 ) ;
typedef xlint (*FnPtr_1311) ( xlint x_1309 , xlint var1308_1310 ) ;
xlint max_1312 ( xlint x_1309 , xlint var1308_1310 ) ;
xlint ret_1323; /* Temp */
xlint ret_1324; /* Temp */
xlint max_1281 ( xlint x_1279 ) {
xlint result_1288; /* Result */
result_1288 = x_1279;
goto exit_max_1281;
exit_max_1281: 0;
return result_1288;
}
xlint max_1312 ( xlint x_1309 , xlint var1308_1310 ) {
xlint ret_1314; /* Temp */
xlbool ret_1316; /* Temp */
xlint result_1313; /* Result */
ret_1314 = max_1281 ( var1308_1310 );
result_1313 = ret_1314;
ret_1316 = result_1313 < x_1309;
if(!(ret_1316)) goto else_if_1315;
result_1313 = x_1309;
else_if_1315: 0;
exit_max_1312: 0;
return result_1313;
}
xlint max_1306 ( xlint x_1302 , xlint var1300_1303 , xlint var1301_1304 ) {
xlint ret_1317; /* Temp */
xlbool ret_1319; /* Temp */
xlint result_1307; /* Result */
ret_1317 = max_1312 ( var1300_1303 , var1301_1304 );
result_1307 = ret_1317;
ret_1319 = result_1307 < x_1302;
if(!(ret_1319)) goto else_if_1318;
result_1307 = x_1302;
else_if_1318: 0;
exit_max_1306: 0;
return result_1307;
}
xlint max_1298 ( xlint x_1293 , xlint var1290_1294 , xlint var1291_1295 , xlint var1292_1296 ) {
xlint ret_1320; /* Temp */
xlbool ret_1322; /* Temp */
xlint result_1299; /* Result */
ret_1320 = max_1306 ( var1290_1294 , var1291_1295 , var1292_1296 );
result_1299 = ret_1320;
ret_1322 = result_1299 < x_1293;
if(!(ret_1322)) goto else_if_1321;
result_1299 = x_1293;
else_if_1321: 0;
exit_max_1298: 0;
return result_1299;
}
int main(int _argc, char **_argv)
{
xlint ret_1323; /* Temp */
xlint ret_1324; /* Temp */
ret_1323 = max_1298 ( 1 , 2 , 3 , 4 );
k_1286 = ret_1323;
ret_1324 = max_1306 ( 1 , 2 , 3 );
l_1287 = ret_1324;
    /* Main */
    return 0;
}
/*end*/
