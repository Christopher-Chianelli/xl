#include <stdio.h>
typedef char                   xlint8;
typedef short                  xlint16;
typedef int                    xlint32;
typedef long long              xlint64;
typedef unsigned char          xluint8;
typedef unsigned short         xluint16;
typedef unsigned int           xluint32;
typedef unsigned long long     xluint64;
typedef float                  xlreal32;
typedef double                 xlreal64;
typedef int                    xlint;
typedef unsigned               xluint;
typedef double                 xlreal;
typedef char                   xlbool;
typedef char                   xlchar;
typedef const char *           xltext;
typedef void *                 xlptr;
typedef struct {} /* !ANSIC */ xlrecord, xlmodule;
typedef FILE *                 xlfile;
xlfile xl_getstdfile(int n) {
  switch(n) {
    case 0: return stdin;
    case 1: return stdout;
    case 2: return stderr;
  }
  return NULL;
}
typedef struct Record_1245 {
  xlmodule baserecord_1; /* RecF */
} Record_1245;
Record_1245 xlbuiltins_1246; /* Global */
xlint ret_1321; /* Temp */
xlreal ret_1322; /* Temp */
xlint testinteger_1256; /* Global */
xlreal testreal_1257; /* Global */
xlint testinteger1_1258; /* Global */
xlreal testreal1_1259; /* Global */
xlint testinteger2_1260; /* Global */
xlreal testreal2_1261; /* Global */
typedef xlint (*FnPtr_1275) ( xlint x_1271 , xlint var1268_1272 , xlint var1269_1273 , xlint var1270_1274 ) ;
xlint max_1276 ( xlint x_1271 , xlint var1268_1272 , xlint var1269_1273 , xlint var1270_1274 ) ;
typedef xlint (*FnPtr_1287) ( xlint x_1284 , xlint var1282_1285 , xlint var1283_1286 ) ;
xlint max_1288 ( xlint x_1284 , xlint var1282_1285 , xlint var1283_1286 ) ;
typedef xlint (*FnPtr_1297) ( xlint x_1295 , xlint var1294_1296 ) ;
xlint max_1298 ( xlint x_1295 , xlint var1294_1296 ) ;
typedef xlint (*FnPtr_1309) ( xlint x_1308 ) ;
xlint max_1310 ( xlint x_1308 ) ;
typedef xlreal (*FnPtr_1336) ( xlreal x_1331 , xlreal var1327_1332 , xlreal var1328_1333 , xlreal var1329_1334 , xlreal var1330_1335 ) ;
xlreal max_1337 ( xlreal x_1331 , xlreal var1327_1332 , xlreal var1328_1333 , xlreal var1329_1334 , xlreal var1330_1335 ) ;
typedef xlreal (*FnPtr_1350) ( xlreal x_1346 , xlreal var1343_1347 , xlreal var1344_1348 , xlreal var1345_1349 ) ;
xlreal max_1351 ( xlreal x_1346 , xlreal var1343_1347 , xlreal var1344_1348 , xlreal var1345_1349 ) ;
typedef xlreal (*FnPtr_1362) ( xlreal x_1359 , xlreal var1357_1360 , xlreal var1358_1361 ) ;
xlreal max_1363 ( xlreal x_1359 , xlreal var1357_1360 , xlreal var1358_1361 ) ;
typedef xlreal (*FnPtr_1372) ( xlreal x_1370 , xlreal var1369_1371 ) ;
xlreal max_1373 ( xlreal x_1370 , xlreal var1369_1371 ) ;
typedef xlreal (*FnPtr_1384) ( xlreal x_1383 ) ;
xlreal max_1385 ( xlreal x_1383 ) ;
xlreal ret_1399; /* Temp */
xlint ret_1408; /* Temp */
xlreal ret_1417; /* Temp */
xlint ret_1422; /* Temp */
xlreal ret_1427; /* Temp */
xlint max_1310 ( xlint x_1308 ) {
xlint result_1311; /* Result */
result_1311 = x_1308;
goto exit_max_1310;
exit_max_1310: 0;
return result_1311;
}
xlint max_1298 ( xlint x_1295 , xlint var1294_1296 ) {
xlint ret_1312; /* Temp */
xlbool ret_1314; /* Temp */
xlint result_1299; /* Result */
ret_1312 = max_1310 ( var1294_1296 );
result_1299 = ret_1312;
ret_1314 = result_1299 < x_1295;
if(!(ret_1314)) goto else_if_1313;
result_1299 = x_1295;
else_if_1313: 0;
exit_max_1298: 0;
return result_1299;
}
xlint max_1288 ( xlint x_1284 , xlint var1282_1285 , xlint var1283_1286 ) {
xlint ret_1315; /* Temp */
xlbool ret_1317; /* Temp */
xlint result_1289; /* Result */
ret_1315 = max_1298 ( var1282_1285 , var1283_1286 );
result_1289 = ret_1315;
ret_1317 = result_1289 < x_1284;
if(!(ret_1317)) goto else_if_1316;
result_1289 = x_1284;
else_if_1316: 0;
exit_max_1288: 0;
return result_1289;
}
xlint max_1276 ( xlint x_1271 , xlint var1268_1272 , xlint var1269_1273 , xlint var1270_1274 ) {
xlint ret_1318; /* Temp */
xlbool ret_1320; /* Temp */
xlint result_1277; /* Result */
ret_1318 = max_1288 ( var1268_1272 , var1269_1273 , var1270_1274 );
result_1277 = ret_1318;
ret_1320 = result_1277 < x_1271;
if(!(ret_1320)) goto else_if_1319;
result_1277 = x_1271;
else_if_1319: 0;
exit_max_1276: 0;
return result_1277;
}
xlreal max_1385 ( xlreal x_1383 ) {
xlreal result_1386; /* Result */
result_1386 = x_1383;
goto exit_max_1385;
exit_max_1385: 0;
return result_1386;
}
xlreal max_1373 ( xlreal x_1370 , xlreal var1369_1371 ) {
xlreal ret_1387; /* Temp */
xlbool ret_1389; /* Temp */
xlreal result_1374; /* Result */
ret_1387 = max_1385 ( var1369_1371 );
result_1374 = ret_1387;
ret_1389 = result_1374 < x_1370;
if(!(ret_1389)) goto else_if_1388;
result_1374 = x_1370;
else_if_1388: 0;
exit_max_1373: 0;
return result_1374;
}
xlreal max_1363 ( xlreal x_1359 , xlreal var1357_1360 , xlreal var1358_1361 ) {
xlreal ret_1390; /* Temp */
xlbool ret_1392; /* Temp */
xlreal result_1364; /* Result */
ret_1390 = max_1373 ( var1357_1360 , var1358_1361 );
result_1364 = ret_1390;
ret_1392 = result_1364 < x_1359;
if(!(ret_1392)) goto else_if_1391;
result_1364 = x_1359;
else_if_1391: 0;
exit_max_1363: 0;
return result_1364;
}
xlreal max_1351 ( xlreal x_1346 , xlreal var1343_1347 , xlreal var1344_1348 , xlreal var1345_1349 ) {
xlreal ret_1393; /* Temp */
xlbool ret_1395; /* Temp */
xlreal result_1352; /* Result */
ret_1393 = max_1363 ( var1343_1347 , var1344_1348 , var1345_1349 );
result_1352 = ret_1393;
ret_1395 = result_1352 < x_1346;
if(!(ret_1395)) goto else_if_1394;
result_1352 = x_1346;
else_if_1394: 0;
exit_max_1351: 0;
return result_1352;
}
xlreal max_1337 ( xlreal x_1331 , xlreal var1327_1332 , xlreal var1328_1333 , xlreal var1329_1334 , xlreal var1330_1335 ) {
xlreal ret_1396; /* Temp */
xlbool ret_1398; /* Temp */
xlreal result_1338; /* Result */
ret_1396 = max_1351 ( var1327_1332 , var1328_1333 , var1329_1334 , var1330_1335 );
result_1338 = ret_1396;
ret_1398 = result_1338 < x_1331;
if(!(ret_1398)) goto else_if_1397;
result_1338 = x_1331;
else_if_1397: 0;
exit_max_1337: 0;
return result_1338;
}
int main(int _argc, char **_argv)
{
xlint ret_1321; /* Temp */
xlreal ret_1322; /* Temp */
xlreal ret_1399; /* Temp */
xlint ret_1408; /* Temp */
xlreal ret_1417; /* Temp */
xlint ret_1422; /* Temp */
xlreal ret_1427; /* Temp */
ret_1321 = max_1276 ( 1 , 2 , 4 , 6 );
testinteger_1256 = ret_1321;
ret_1322 = -2.6;
ret_1399 = max_1337 ( 1.5 , ret_1322 , 2.7 , 8.41 , 2.21 );
testreal_1257 = ret_1399;
ret_1408 = max_1310 ( 1 );
testinteger1_1258 = ret_1408;
ret_1417 = max_1385 ( 2.21 );
testreal1_1259 = ret_1417;
ret_1422 = max_1298 ( 1 , 817 );
testinteger2_1260 = ret_1422;
ret_1427 = max_1373 ( 2.21 , 0.004441 );
testreal2_1261 = ret_1427;
/* Type */
    /* Main */
    return 0;
}
/*end*/
