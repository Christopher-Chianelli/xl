#include <stdio.h>
typedef char                   xlint8;
typedef short                  xlint16;
typedef int                    xlint32;
typedef long long              xlint64;
typedef unsigned char          xluint8;
typedef unsigned short         xluint16;
typedef unsigned int           xluint32;
typedef unsigned long long     xluint64;
typedef float                  xlreal32;
typedef double                 xlreal64;
typedef int                    xlint;
typedef unsigned               xluint;
typedef double                 xlreal;
typedef char                   xlbool;
typedef char                   xlchar;
typedef const char *           xltext;
typedef void *                 xlptr;
typedef struct {} /* !ANSIC */ xlrecord, xlmodule;
typedef FILE *                 xlfile;
xlfile xl_getstdfile(int n) {
  switch(n) {
    case 0: return stdin;
    case 1: return stdout;
    case 2: return stderr;
  }
  return NULL;
}
typedef struct Record_1277 {
  xlmodule baserecord_1; /* RecF */
} Record_1277;
Record_1277 xlbuiltins_1278; /* Global */
xlint ret_1357; /* Temp */
xlint ret_1340; /* Temp */
xlint ret_1327; /* Temp */
xlint ret_1312; /* Temp */
xlreal ret_1449; /* Temp */
xlreal ret_1432; /* Temp */
xlreal ret_1419; /* Temp */
xlreal ret_1404; /* Temp */
xlint ret_1367; /* Temp */
xlreal ret_1368; /* Temp */
xlreal ret_1387; /* Temp */
xlint testinteger_1288; /* Global */
xlreal testreal_1289; /* Global */
xlint testinteger1_1290; /* Global */
xlreal testreal1_1291; /* Global */
xlint testinteger2_1292; /* Global */
xlreal testreal2_1293; /* Global */
typedef xlint (*FnPtr_1309) ( xlint x_1305 , xlint var1302_1306 , xlint var1303_1307 , xlint var1304_1308 ) ;
xlint max_1310 ( xlint x_1305 , xlint var1302_1306 , xlint var1303_1307 , xlint var1304_1308 ) ;
typedef xlint (*FnPtr_1324) ( xlint x_1321 , xlint var1319_1322 , xlint var1320_1323 ) ;
xlint max_1325 ( xlint x_1321 , xlint var1319_1322 , xlint var1320_1323 ) ;
typedef xlint (*FnPtr_1337) ( xlint x_1335 , xlint var1334_1336 ) ;
xlint max_1338 ( xlint x_1335 , xlint var1334_1336 ) ;
typedef xlint (*FnPtr_1354) ( xlint x_1353 ) ;
xlint max_1355 ( xlint x_1353 ) ;
typedef xlreal (*FnPtr_1384) ( xlreal x_1379 , xlreal var1375_1380 , xlreal var1376_1381 , xlreal var1377_1382 , xlreal var1378_1383 ) ;
xlreal max_1385 ( xlreal x_1379 , xlreal var1375_1380 , xlreal var1376_1381 , xlreal var1377_1382 , xlreal var1378_1383 ) ;
typedef xlreal (*FnPtr_1401) ( xlreal x_1397 , xlreal var1394_1398 , xlreal var1395_1399 , xlreal var1396_1400 ) ;
xlreal max_1402 ( xlreal x_1397 , xlreal var1394_1398 , xlreal var1395_1399 , xlreal var1396_1400 ) ;
typedef xlreal (*FnPtr_1416) ( xlreal x_1413 , xlreal var1411_1414 , xlreal var1412_1415 ) ;
xlreal max_1417 ( xlreal x_1413 , xlreal var1411_1414 , xlreal var1412_1415 ) ;
typedef xlreal (*FnPtr_1429) ( xlreal x_1427 , xlreal var1426_1428 ) ;
xlreal max_1430 ( xlreal x_1427 , xlreal var1426_1428 ) ;
typedef xlreal (*FnPtr_1446) ( xlreal x_1445 ) ;
xlreal max_1447 ( xlreal x_1445 ) ;
xlreal ret_1462; /* Temp */
xlint ret_1475; /* Temp */
xlreal ret_1488; /* Temp */
xlint ret_1495; /* Temp */
xlreal ret_1502; /* Temp */
xlint max_1355 ( xlint x_1353 ) {
xlint result_1356; /* Result */
ret_1357 = 0;
result_1356 = ret_1357;
result_1356 = x_1353;
goto exit_max_1355;
exit_max_1355: 0;
return result_1356;
}
xlint max_1338 ( xlint x_1335 , xlint var1334_1336 ) {
xlint ret_1358; /* Temp */
xlbool ret_1360; /* Temp */
xlint result_1339; /* Result */
ret_1340 = 0;
result_1339 = ret_1340;
ret_1358 = max_1355 ( var1334_1336 );
result_1339 = ret_1358;
ret_1360 = result_1339 < x_1335;
if(!(ret_1360)) goto else_if_1359;
result_1339 = x_1335;
else_if_1359: 0;
exit_max_1338: 0;
return result_1339;
}
xlint max_1325 ( xlint x_1321 , xlint var1319_1322 , xlint var1320_1323 ) {
xlint ret_1361; /* Temp */
xlbool ret_1363; /* Temp */
xlint result_1326; /* Result */
ret_1327 = 0;
result_1326 = ret_1327;
ret_1361 = max_1338 ( var1319_1322 , var1320_1323 );
result_1326 = ret_1361;
ret_1363 = result_1326 < x_1321;
if(!(ret_1363)) goto else_if_1362;
result_1326 = x_1321;
else_if_1362: 0;
exit_max_1325: 0;
return result_1326;
}
xlint max_1310 ( xlint x_1305 , xlint var1302_1306 , xlint var1303_1307 , xlint var1304_1308 ) {
xlint ret_1364; /* Temp */
xlbool ret_1366; /* Temp */
xlint result_1311; /* Result */
ret_1312 = 0;
result_1311 = ret_1312;
ret_1364 = max_1325 ( var1302_1306 , var1303_1307 , var1304_1308 );
result_1311 = ret_1364;
ret_1366 = result_1311 < x_1305;
if(!(ret_1366)) goto else_if_1365;
result_1311 = x_1305;
else_if_1365: 0;
exit_max_1310: 0;
return result_1311;
}
xlreal max_1447 ( xlreal x_1445 ) {
xlreal result_1448; /* Result */
ret_1449 = 0.0;
result_1448 = ret_1449;
result_1448 = x_1445;
goto exit_max_1447;
exit_max_1447: 0;
return result_1448;
}
xlreal max_1430 ( xlreal x_1427 , xlreal var1426_1428 ) {
xlreal ret_1450; /* Temp */
xlbool ret_1452; /* Temp */
xlreal result_1431; /* Result */
ret_1432 = 0.0;
result_1431 = ret_1432;
ret_1450 = max_1447 ( var1426_1428 );
result_1431 = ret_1450;
ret_1452 = result_1431 < x_1427;
if(!(ret_1452)) goto else_if_1451;
result_1431 = x_1427;
else_if_1451: 0;
exit_max_1430: 0;
return result_1431;
}
xlreal max_1417 ( xlreal x_1413 , xlreal var1411_1414 , xlreal var1412_1415 ) {
xlreal ret_1453; /* Temp */
xlbool ret_1455; /* Temp */
xlreal result_1418; /* Result */
ret_1419 = 0.0;
result_1418 = ret_1419;
ret_1453 = max_1430 ( var1411_1414 , var1412_1415 );
result_1418 = ret_1453;
ret_1455 = result_1418 < x_1413;
if(!(ret_1455)) goto else_if_1454;
result_1418 = x_1413;
else_if_1454: 0;
exit_max_1417: 0;
return result_1418;
}
xlreal max_1402 ( xlreal x_1397 , xlreal var1394_1398 , xlreal var1395_1399 , xlreal var1396_1400 ) {
xlreal ret_1456; /* Temp */
xlbool ret_1458; /* Temp */
xlreal result_1403; /* Result */
ret_1404 = 0.0;
result_1403 = ret_1404;
ret_1456 = max_1417 ( var1394_1398 , var1395_1399 , var1396_1400 );
result_1403 = ret_1456;
ret_1458 = result_1403 < x_1397;
if(!(ret_1458)) goto else_if_1457;
result_1403 = x_1397;
else_if_1457: 0;
exit_max_1402: 0;
return result_1403;
}
xlreal max_1385 ( xlreal x_1379 , xlreal var1375_1380 , xlreal var1376_1381 , xlreal var1377_1382 , xlreal var1378_1383 ) {
xlreal ret_1459; /* Temp */
xlbool ret_1461; /* Temp */
xlreal result_1386; /* Result */
ret_1387 = 0.0;
result_1386 = ret_1387;
ret_1459 = max_1402 ( var1375_1380 , var1376_1381 , var1377_1382 , var1378_1383 );
result_1386 = ret_1459;
ret_1461 = result_1386 < x_1379;
if(!(ret_1461)) goto else_if_1460;
result_1386 = x_1379;
else_if_1460: 0;
exit_max_1385: 0;
return result_1386;
}
int main(int _argc, char **_argv)
{
xlint ret_1357; /* Temp */
xlint ret_1340; /* Temp */
xlint ret_1327; /* Temp */
xlint ret_1312; /* Temp */
xlreal ret_1449; /* Temp */
xlreal ret_1432; /* Temp */
xlreal ret_1419; /* Temp */
xlreal ret_1404; /* Temp */
xlint ret_1367; /* Temp */
xlreal ret_1368; /* Temp */
xlreal ret_1387; /* Temp */
xlreal ret_1462; /* Temp */
xlint ret_1475; /* Temp */
xlreal ret_1488; /* Temp */
xlint ret_1495; /* Temp */
xlreal ret_1502; /* Temp */
ret_1367 = max_1310 ( 1 , 2 , 4 , 6 );
testinteger_1288 = ret_1367;
ret_1368 = -2.6;
ret_1462 = max_1385 ( 1.5 , ret_1368 , 2.7 , 8.41 , 2.21 );
testreal_1289 = ret_1462;
ret_1475 = max_1355 ( 1 );
testinteger1_1290 = ret_1475;
ret_1488 = max_1447 ( 2.21 );
testreal1_1291 = ret_1488;
ret_1495 = max_1338 ( 1 , 817 );
testinteger2_1292 = ret_1495;
ret_1502 = max_1430 ( 2.21 , 0.004441 );
testreal2_1293 = ret_1502;
/* Type */
    /* Main */
    return 0;
}
/*end*/
