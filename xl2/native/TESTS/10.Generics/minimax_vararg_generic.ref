#include <stdio.h>
typedef char                   xlint8;
typedef short                  xlint16;
typedef int                    xlint32;
typedef long long              xlint64;
typedef unsigned char          xluint8;
typedef unsigned short         xluint16;
typedef unsigned int           xluint32;
typedef unsigned long long     xluint64;
typedef float                  xlreal32;
typedef double                 xlreal64;
typedef int                    xlint;
typedef unsigned               xluint;
typedef double                 xlreal;
typedef char                   xlbool;
typedef char                   xlchar;
typedef const char *           xltext;
typedef void *                 xlptr;
typedef struct {} /* !ANSIC */ xlrecord, xlmodule;
typedef FILE *                 xlfile;
xlfile xl_getstdfile(int n) {
  switch(n) {
    case 0: return stdin;
    case 1: return stdout;
    case 2: return stderr;
  }
  return NULL;
}
typedef struct Record_954 {
  xlmodule baserecord_1; /* RecF */
} Record_954;
Record_954 xlbuiltins_955; /* Global */
xlint ret_1030; /* Temp */
xlreal ret_1031; /* Temp */
xlint testinteger_965; /* Global */
xlreal testreal_966; /* Global */
xlint testinteger1_967; /* Global */
xlreal testreal1_968; /* Global */
xlint testinteger2_969; /* Global */
xlreal testreal2_970; /* Global */
typedef xlint (*FnPtr_984) ( xlint x_980 , xlint var977_981 , xlint var978_982 , xlint var979_983 ) ;
xlint max_985 ( xlint x_980 , xlint var977_981 , xlint var978_982 , xlint var979_983 ) ;
typedef xlint (*FnPtr_996) ( xlint x_993 , xlint var991_994 , xlint var992_995 ) ;
xlint max_997 ( xlint x_993 , xlint var991_994 , xlint var992_995 ) ;
typedef xlint (*FnPtr_1006) ( xlint x_1004 , xlint var1003_1005 ) ;
xlint max_1007 ( xlint x_1004 , xlint var1003_1005 ) ;
typedef xlint (*FnPtr_1018) ( xlint x_1017 ) ;
xlint max_1019 ( xlint x_1017 ) ;
typedef xlreal (*FnPtr_1045) ( xlreal x_1040 , xlreal var1036_1041 , xlreal var1037_1042 , xlreal var1038_1043 , xlreal var1039_1044 ) ;
xlreal max_1046 ( xlreal x_1040 , xlreal var1036_1041 , xlreal var1037_1042 , xlreal var1038_1043 , xlreal var1039_1044 ) ;
typedef xlreal (*FnPtr_1059) ( xlreal x_1055 , xlreal var1052_1056 , xlreal var1053_1057 , xlreal var1054_1058 ) ;
xlreal max_1060 ( xlreal x_1055 , xlreal var1052_1056 , xlreal var1053_1057 , xlreal var1054_1058 ) ;
typedef xlreal (*FnPtr_1071) ( xlreal x_1068 , xlreal var1066_1069 , xlreal var1067_1070 ) ;
xlreal max_1072 ( xlreal x_1068 , xlreal var1066_1069 , xlreal var1067_1070 ) ;
typedef xlreal (*FnPtr_1081) ( xlreal x_1079 , xlreal var1078_1080 ) ;
xlreal max_1082 ( xlreal x_1079 , xlreal var1078_1080 ) ;
typedef xlreal (*FnPtr_1093) ( xlreal x_1092 ) ;
xlreal max_1094 ( xlreal x_1092 ) ;
xlreal ret_1108; /* Temp */
xlint ret_1117; /* Temp */
xlreal ret_1126; /* Temp */
xlint ret_1131; /* Temp */
xlreal ret_1136; /* Temp */
xlint max_1019 ( xlint x_1017 ) {
xlint result_1020; /* Result */
result_1020 = x_1017;
goto exit_max_1019;
exit_max_1019: 0;
return result_1020;
}
xlint max_1007 ( xlint x_1004 , xlint var1003_1005 ) {
xlint ret_1021; /* Temp */
xlbool ret_1023; /* Temp */
xlint result_1008; /* Result */
ret_1021 = max_1019 ( var1003_1005 );
result_1008 = ret_1021;
ret_1023 = result_1008 < x_1004;
if(!(ret_1023)) goto else_if_1022;
result_1008 = x_1004;
else_if_1022: 0;
exit_max_1007: 0;
return result_1008;
}
xlint max_997 ( xlint x_993 , xlint var991_994 , xlint var992_995 ) {
xlint ret_1024; /* Temp */
xlbool ret_1026; /* Temp */
xlint result_998; /* Result */
ret_1024 = max_1007 ( var991_994 , var992_995 );
result_998 = ret_1024;
ret_1026 = result_998 < x_993;
if(!(ret_1026)) goto else_if_1025;
result_998 = x_993;
else_if_1025: 0;
exit_max_997: 0;
return result_998;
}
xlint max_985 ( xlint x_980 , xlint var977_981 , xlint var978_982 , xlint var979_983 ) {
xlint ret_1027; /* Temp */
xlbool ret_1029; /* Temp */
xlint result_986; /* Result */
ret_1027 = max_997 ( var977_981 , var978_982 , var979_983 );
result_986 = ret_1027;
ret_1029 = result_986 < x_980;
if(!(ret_1029)) goto else_if_1028;
result_986 = x_980;
else_if_1028: 0;
exit_max_985: 0;
return result_986;
}
xlreal max_1094 ( xlreal x_1092 ) {
xlreal result_1095; /* Result */
result_1095 = x_1092;
goto exit_max_1094;
exit_max_1094: 0;
return result_1095;
}
xlreal max_1082 ( xlreal x_1079 , xlreal var1078_1080 ) {
xlreal ret_1096; /* Temp */
xlbool ret_1098; /* Temp */
xlreal result_1083; /* Result */
ret_1096 = max_1094 ( var1078_1080 );
result_1083 = ret_1096;
ret_1098 = result_1083 < x_1079;
if(!(ret_1098)) goto else_if_1097;
result_1083 = x_1079;
else_if_1097: 0;
exit_max_1082: 0;
return result_1083;
}
xlreal max_1072 ( xlreal x_1068 , xlreal var1066_1069 , xlreal var1067_1070 ) {
xlreal ret_1099; /* Temp */
xlbool ret_1101; /* Temp */
xlreal result_1073; /* Result */
ret_1099 = max_1082 ( var1066_1069 , var1067_1070 );
result_1073 = ret_1099;
ret_1101 = result_1073 < x_1068;
if(!(ret_1101)) goto else_if_1100;
result_1073 = x_1068;
else_if_1100: 0;
exit_max_1072: 0;
return result_1073;
}
xlreal max_1060 ( xlreal x_1055 , xlreal var1052_1056 , xlreal var1053_1057 , xlreal var1054_1058 ) {
xlreal ret_1102; /* Temp */
xlbool ret_1104; /* Temp */
xlreal result_1061; /* Result */
ret_1102 = max_1072 ( var1052_1056 , var1053_1057 , var1054_1058 );
result_1061 = ret_1102;
ret_1104 = result_1061 < x_1055;
if(!(ret_1104)) goto else_if_1103;
result_1061 = x_1055;
else_if_1103: 0;
exit_max_1060: 0;
return result_1061;
}
xlreal max_1046 ( xlreal x_1040 , xlreal var1036_1041 , xlreal var1037_1042 , xlreal var1038_1043 , xlreal var1039_1044 ) {
xlreal ret_1105; /* Temp */
xlbool ret_1107; /* Temp */
xlreal result_1047; /* Result */
ret_1105 = max_1060 ( var1036_1041 , var1037_1042 , var1038_1043 , var1039_1044 );
result_1047 = ret_1105;
ret_1107 = result_1047 < x_1040;
if(!(ret_1107)) goto else_if_1106;
result_1047 = x_1040;
else_if_1106: 0;
exit_max_1046: 0;
return result_1047;
}
int main(int _argc, char **_argv)
{
xlint ret_1030; /* Temp */
xlreal ret_1031; /* Temp */
xlreal ret_1108; /* Temp */
xlint ret_1117; /* Temp */
xlreal ret_1126; /* Temp */
xlint ret_1131; /* Temp */
xlreal ret_1136; /* Temp */
ret_1030 = max_985 ( 1 , 2 , 4 , 6 );
testinteger_965 = ret_1030;
ret_1031 = -2.6;
ret_1108 = max_1046 ( 1.5 , ret_1031 , 2.7 , 8.41 , 2.21 );
testreal_966 = ret_1108;
ret_1117 = max_1019 ( 1 );
testinteger1_967 = ret_1117;
ret_1126 = max_1094 ( 2.21 );
testreal1_968 = ret_1126;
ret_1131 = max_1007 ( 1 , 817 );
testinteger2_969 = ret_1131;
ret_1136 = max_1082 ( 2.21 , 0.004441 );
testreal2_970 = ret_1136;
/* Type */
    /* Main */
    return 0;
}
/*end*/
