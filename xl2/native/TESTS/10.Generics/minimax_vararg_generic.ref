#include <stdio.h>
typedef char                   xlint8;
typedef short                  xlint16;
typedef int                    xlint32;
typedef long long              xlint64;
typedef unsigned char          xluint8;
typedef unsigned short         xluint16;
typedef unsigned int           xluint32;
typedef unsigned long long     xluint64;
typedef float                  xlreal32;
typedef double                 xlreal64;
typedef int                    xlint;
typedef unsigned               xluint;
typedef double                 xlreal;
typedef char                   xlbool;
typedef char                   xlchar;
typedef const char *           xltext;
typedef void *                 xlptr;
typedef struct {} /* !ANSIC */ xlrecord, xlmodule;
typedef FILE *                 xlfile;
xlfile xl_getstdfile(int n) {
  switch(n) {
    case 0: return stdin;
    case 1: return stdout;
    case 2: return stderr;
  }
  return NULL;
}
typedef struct Record_970 {
  xlmodule baserecord_1; /* RecF */
} Record_970;
Record_970 xlbuiltins_971; /* Global */
xlint ret_1046; /* Temp */
xlreal ret_1047; /* Temp */
xlint testinteger_981; /* Global */
xlreal testreal_982; /* Global */
xlint testinteger1_983; /* Global */
xlreal testreal1_984; /* Global */
xlint testinteger2_985; /* Global */
xlreal testreal2_986; /* Global */
typedef xlint (*FnPtr_1000) ( xlint x_996 , xlint var993_997 , xlint var994_998 , xlint var995_999 ) ;
xlint max_1001 ( xlint x_996 , xlint var993_997 , xlint var994_998 , xlint var995_999 ) ;
typedef xlint (*FnPtr_1012) ( xlint x_1009 , xlint var1007_1010 , xlint var1008_1011 ) ;
xlint max_1013 ( xlint x_1009 , xlint var1007_1010 , xlint var1008_1011 ) ;
typedef xlint (*FnPtr_1022) ( xlint x_1020 , xlint var1019_1021 ) ;
xlint max_1023 ( xlint x_1020 , xlint var1019_1021 ) ;
typedef xlint (*FnPtr_1034) ( xlint x_1033 ) ;
xlint max_1035 ( xlint x_1033 ) ;
typedef xlreal (*FnPtr_1061) ( xlreal x_1056 , xlreal var1052_1057 , xlreal var1053_1058 , xlreal var1054_1059 , xlreal var1055_1060 ) ;
xlreal max_1062 ( xlreal x_1056 , xlreal var1052_1057 , xlreal var1053_1058 , xlreal var1054_1059 , xlreal var1055_1060 ) ;
typedef xlreal (*FnPtr_1075) ( xlreal x_1071 , xlreal var1068_1072 , xlreal var1069_1073 , xlreal var1070_1074 ) ;
xlreal max_1076 ( xlreal x_1071 , xlreal var1068_1072 , xlreal var1069_1073 , xlreal var1070_1074 ) ;
typedef xlreal (*FnPtr_1087) ( xlreal x_1084 , xlreal var1082_1085 , xlreal var1083_1086 ) ;
xlreal max_1088 ( xlreal x_1084 , xlreal var1082_1085 , xlreal var1083_1086 ) ;
typedef xlreal (*FnPtr_1097) ( xlreal x_1095 , xlreal var1094_1096 ) ;
xlreal max_1098 ( xlreal x_1095 , xlreal var1094_1096 ) ;
typedef xlreal (*FnPtr_1109) ( xlreal x_1108 ) ;
xlreal max_1110 ( xlreal x_1108 ) ;
xlreal ret_1124; /* Temp */
xlint ret_1133; /* Temp */
xlreal ret_1142; /* Temp */
xlint ret_1147; /* Temp */
xlreal ret_1152; /* Temp */
xlint max_1035 ( xlint x_1033 ) {
xlint result_1036; /* Result */
result_1036 = x_1033;
goto exit_max_1035;
exit_max_1035: 0;
return result_1036;
}
xlint max_1023 ( xlint x_1020 , xlint var1019_1021 ) {
xlint ret_1037; /* Temp */
xlbool ret_1039; /* Temp */
xlint result_1024; /* Result */
ret_1037 = max_1035 ( var1019_1021 );
result_1024 = ret_1037;
ret_1039 = result_1024 < x_1020;
if(!(ret_1039)) goto else_if_1038;
result_1024 = x_1020;
else_if_1038: 0;
exit_max_1023: 0;
return result_1024;
}
xlint max_1013 ( xlint x_1009 , xlint var1007_1010 , xlint var1008_1011 ) {
xlint ret_1040; /* Temp */
xlbool ret_1042; /* Temp */
xlint result_1014; /* Result */
ret_1040 = max_1023 ( var1007_1010 , var1008_1011 );
result_1014 = ret_1040;
ret_1042 = result_1014 < x_1009;
if(!(ret_1042)) goto else_if_1041;
result_1014 = x_1009;
else_if_1041: 0;
exit_max_1013: 0;
return result_1014;
}
xlint max_1001 ( xlint x_996 , xlint var993_997 , xlint var994_998 , xlint var995_999 ) {
xlint ret_1043; /* Temp */
xlbool ret_1045; /* Temp */
xlint result_1002; /* Result */
ret_1043 = max_1013 ( var993_997 , var994_998 , var995_999 );
result_1002 = ret_1043;
ret_1045 = result_1002 < x_996;
if(!(ret_1045)) goto else_if_1044;
result_1002 = x_996;
else_if_1044: 0;
exit_max_1001: 0;
return result_1002;
}
xlreal max_1110 ( xlreal x_1108 ) {
xlreal result_1111; /* Result */
result_1111 = x_1108;
goto exit_max_1110;
exit_max_1110: 0;
return result_1111;
}
xlreal max_1098 ( xlreal x_1095 , xlreal var1094_1096 ) {
xlreal ret_1112; /* Temp */
xlbool ret_1114; /* Temp */
xlreal result_1099; /* Result */
ret_1112 = max_1110 ( var1094_1096 );
result_1099 = ret_1112;
ret_1114 = result_1099 < x_1095;
if(!(ret_1114)) goto else_if_1113;
result_1099 = x_1095;
else_if_1113: 0;
exit_max_1098: 0;
return result_1099;
}
xlreal max_1088 ( xlreal x_1084 , xlreal var1082_1085 , xlreal var1083_1086 ) {
xlreal ret_1115; /* Temp */
xlbool ret_1117; /* Temp */
xlreal result_1089; /* Result */
ret_1115 = max_1098 ( var1082_1085 , var1083_1086 );
result_1089 = ret_1115;
ret_1117 = result_1089 < x_1084;
if(!(ret_1117)) goto else_if_1116;
result_1089 = x_1084;
else_if_1116: 0;
exit_max_1088: 0;
return result_1089;
}
xlreal max_1076 ( xlreal x_1071 , xlreal var1068_1072 , xlreal var1069_1073 , xlreal var1070_1074 ) {
xlreal ret_1118; /* Temp */
xlbool ret_1120; /* Temp */
xlreal result_1077; /* Result */
ret_1118 = max_1088 ( var1068_1072 , var1069_1073 , var1070_1074 );
result_1077 = ret_1118;
ret_1120 = result_1077 < x_1071;
if(!(ret_1120)) goto else_if_1119;
result_1077 = x_1071;
else_if_1119: 0;
exit_max_1076: 0;
return result_1077;
}
xlreal max_1062 ( xlreal x_1056 , xlreal var1052_1057 , xlreal var1053_1058 , xlreal var1054_1059 , xlreal var1055_1060 ) {
xlreal ret_1121; /* Temp */
xlbool ret_1123; /* Temp */
xlreal result_1063; /* Result */
ret_1121 = max_1076 ( var1052_1057 , var1053_1058 , var1054_1059 , var1055_1060 );
result_1063 = ret_1121;
ret_1123 = result_1063 < x_1056;
if(!(ret_1123)) goto else_if_1122;
result_1063 = x_1056;
else_if_1122: 0;
exit_max_1062: 0;
return result_1063;
}
int main(int _argc, char **_argv)
{
xlint ret_1046; /* Temp */
xlreal ret_1047; /* Temp */
xlreal ret_1124; /* Temp */
xlint ret_1133; /* Temp */
xlreal ret_1142; /* Temp */
xlint ret_1147; /* Temp */
xlreal ret_1152; /* Temp */
ret_1046 = max_1001 ( 1 , 2 , 4 , 6 );
testinteger_981 = ret_1046;
ret_1047 = -2.6;
ret_1124 = max_1062 ( 1.5 , ret_1047 , 2.7 , 8.41 , 2.21 );
testreal_982 = ret_1124;
ret_1133 = max_1035 ( 1 );
testinteger1_983 = ret_1133;
ret_1142 = max_1110 ( 2.21 );
testreal1_984 = ret_1142;
ret_1147 = max_1023 ( 1 , 817 );
testinteger2_985 = ret_1147;
ret_1152 = max_1098 ( 2.21 , 0.004441 );
testreal2_986 = ret_1152;
/* Type */
    /* Main */
    return 0;
}
/*end*/
