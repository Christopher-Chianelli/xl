#include <stdio.h>
typedef char                   xlint8;
typedef short                  xlint16;
typedef int                    xlint32;
typedef long long              xlint64;
typedef unsigned char          xluint8;
typedef unsigned short         xluint16;
typedef unsigned int           xluint32;
typedef unsigned long long     xluint64;
typedef float                  xlreal32;
typedef double                 xlreal64;
typedef int                    xlint;
typedef unsigned               xluint;
typedef double                 xlreal;
typedef char                   xlbool;
typedef char                   xlchar;
typedef const char *           xltext;
typedef void *                 xlptr;
typedef struct {} /* !ANSIC */ xlrecord, xlmodule;
typedef FILE *                 xlfile;
typedef struct Record_954 {
  xlmodule base_1;
} Record_954;
Record_954 xlbuiltins_955; /* Global */
xlint ret_1034; /* Temp */
xlreal ret_1035; /* Temp */
xlint testinteger_965; /* Global */
xlreal testreal_966; /* Global */
xlint testinteger1_967; /* Global */
xlreal testreal1_968; /* Global */
xlint testinteger2_969; /* Global */
xlreal testreal2_970; /* Global */
typedef xlint (*FnPtr_984) ( xlint x_980 , xlint var977_981 , xlint var978_982 , xlint var979_983 ) ;
xlint max_985 ( xlint x_980 , xlint var977_981 , xlint var978_982 , xlint var979_983 ) ;
typedef xlint (*FnPtr_1000) ( xlint x_997 , xlint var995_998 , xlint var996_999 ) ;
xlint max_1001 ( xlint x_997 , xlint var995_998 , xlint var996_999 ) ;
typedef xlint (*FnPtr_1010) ( xlint x_1008 , xlint var1007_1009 ) ;
xlint max_1011 ( xlint x_1008 , xlint var1007_1009 ) ;
typedef xlint (*FnPtr_1022) ( xlint x_1021 ) ;
xlint max_1023 ( xlint x_1021 ) ;
typedef xlreal (*FnPtr_1049) ( xlreal x_1044 , xlreal var1040_1045 , xlreal var1041_1046 , xlreal var1042_1047 , xlreal var1043_1048 ) ;
xlreal max_1050 ( xlreal x_1044 , xlreal var1040_1045 , xlreal var1041_1046 , xlreal var1042_1047 , xlreal var1043_1048 ) ;
typedef xlreal (*FnPtr_1067) ( xlreal x_1063 , xlreal var1060_1064 , xlreal var1061_1065 , xlreal var1062_1066 ) ;
xlreal max_1068 ( xlreal x_1063 , xlreal var1060_1064 , xlreal var1061_1065 , xlreal var1062_1066 ) ;
typedef xlreal (*FnPtr_1079) ( xlreal x_1076 , xlreal var1074_1077 , xlreal var1075_1078 ) ;
xlreal max_1080 ( xlreal x_1076 , xlreal var1074_1077 , xlreal var1075_1078 ) ;
typedef xlreal (*FnPtr_1089) ( xlreal x_1087 , xlreal var1086_1088 ) ;
xlreal max_1090 ( xlreal x_1087 , xlreal var1086_1088 ) ;
typedef xlreal (*FnPtr_1101) ( xlreal x_1100 ) ;
xlreal max_1102 ( xlreal x_1100 ) ;
xlreal ret_1116; /* Temp */
xlint ret_1125; /* Temp */
xlreal ret_1134; /* Temp */
xlint ret_1139; /* Temp */
xlreal ret_1144; /* Temp */
xlint max_1023 ( xlint x_1021 ) {
xlint result_1024; /* Result */
result_1024 = x_1021;
goto exit_max_1023;
exit_max_1023: 0;
return result_1024;
}
xlint max_1011 ( xlint x_1008 , xlint var1007_1009 ) {
xlint ret_1025; /* Temp */
xlbool ret_1027; /* Temp */
xlint result_1012; /* Result */
ret_1025 = max_1023 ( var1007_1009 );
result_1012 = ret_1025;
ret_1027 = result_1012 < x_1008;
if(!(ret_1027)) goto else_if_1026;
result_1012 = x_1008;
else_if_1026: 0;
exit_max_1011: 0;
return result_1012;
}
xlint max_1001 ( xlint x_997 , xlint var995_998 , xlint var996_999 ) {
xlint ret_1028; /* Temp */
xlbool ret_1030; /* Temp */
xlint result_1002; /* Result */
ret_1028 = max_1011 ( var995_998 , var996_999 );
result_1002 = ret_1028;
ret_1030 = result_1002 < x_997;
if(!(ret_1030)) goto else_if_1029;
result_1002 = x_997;
else_if_1029: 0;
exit_max_1001: 0;
return result_1002;
}
xlint max_985 ( xlint x_980 , xlint var977_981 , xlint var978_982 , xlint var979_983 ) {
xlint ret_1031; /* Temp */
xlbool ret_1033; /* Temp */
xlint result_986; /* Result */
ret_1031 = max_1001 ( var977_981 , var978_982 , var979_983 );
result_986 = ret_1031;
ret_1033 = result_986 < x_980;
if(!(ret_1033)) goto else_if_1032;
result_986 = x_980;
else_if_1032: 0;
exit_max_985: 0;
return result_986;
}
xlreal max_1102 ( xlreal x_1100 ) {
xlreal result_1103; /* Result */
result_1103 = x_1100;
goto exit_max_1102;
exit_max_1102: 0;
return result_1103;
}
xlreal max_1090 ( xlreal x_1087 , xlreal var1086_1088 ) {
xlreal ret_1104; /* Temp */
xlbool ret_1106; /* Temp */
xlreal result_1091; /* Result */
ret_1104 = max_1102 ( var1086_1088 );
result_1091 = ret_1104;
ret_1106 = result_1091 < x_1087;
if(!(ret_1106)) goto else_if_1105;
result_1091 = x_1087;
else_if_1105: 0;
exit_max_1090: 0;
return result_1091;
}
xlreal max_1080 ( xlreal x_1076 , xlreal var1074_1077 , xlreal var1075_1078 ) {
xlreal ret_1107; /* Temp */
xlbool ret_1109; /* Temp */
xlreal result_1081; /* Result */
ret_1107 = max_1090 ( var1074_1077 , var1075_1078 );
result_1081 = ret_1107;
ret_1109 = result_1081 < x_1076;
if(!(ret_1109)) goto else_if_1108;
result_1081 = x_1076;
else_if_1108: 0;
exit_max_1080: 0;
return result_1081;
}
xlreal max_1068 ( xlreal x_1063 , xlreal var1060_1064 , xlreal var1061_1065 , xlreal var1062_1066 ) {
xlreal ret_1110; /* Temp */
xlbool ret_1112; /* Temp */
xlreal result_1069; /* Result */
ret_1110 = max_1080 ( var1060_1064 , var1061_1065 , var1062_1066 );
result_1069 = ret_1110;
ret_1112 = result_1069 < x_1063;
if(!(ret_1112)) goto else_if_1111;
result_1069 = x_1063;
else_if_1111: 0;
exit_max_1068: 0;
return result_1069;
}
xlreal max_1050 ( xlreal x_1044 , xlreal var1040_1045 , xlreal var1041_1046 , xlreal var1042_1047 , xlreal var1043_1048 ) {
xlreal ret_1113; /* Temp */
xlbool ret_1115; /* Temp */
xlreal result_1051; /* Result */
ret_1113 = max_1068 ( var1040_1045 , var1041_1046 , var1042_1047 , var1043_1048 );
result_1051 = ret_1113;
ret_1115 = result_1051 < x_1044;
if(!(ret_1115)) goto else_if_1114;
result_1051 = x_1044;
else_if_1114: 0;
exit_max_1050: 0;
return result_1051;
}
int main(int _argc, char **_argv)
{
xlint ret_1034; /* Temp */
xlreal ret_1035; /* Temp */
xlreal ret_1116; /* Temp */
xlint ret_1125; /* Temp */
xlreal ret_1134; /* Temp */
xlint ret_1139; /* Temp */
xlreal ret_1144; /* Temp */
ret_1034 = max_985 ( 1 , 2 , 4 , 6 );
testinteger_965 = ret_1034;
ret_1035 = -2.6;
ret_1116 = max_1050 ( 1.5 , ret_1035 , 2.7 , 8.41 , 2.21 );
testreal_966 = ret_1116;
ret_1125 = max_1023 ( 1 );
testinteger1_967 = ret_1125;
ret_1134 = max_1102 ( 2.21 );
testreal1_968 = ret_1134;
ret_1139 = max_1011 ( 1 , 817 );
testinteger2_969 = ret_1139;
ret_1144 = max_1090 ( 2.21 , 0.004441 );
testreal2_970 = ret_1144;
/* Type */
    /* Main */
    return 0;
}
/*end*/
