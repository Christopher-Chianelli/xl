#include <stdio.h>
typedef char                   xlint8;
typedef short                  xlint16;
typedef int                    xlint32;
typedef long long              xlint64;
typedef unsigned char          xluint8;
typedef unsigned short         xluint16;
typedef unsigned int           xluint32;
typedef unsigned long long     xluint64;
typedef float                  xlreal32;
typedef double                 xlreal64;
typedef int                    xlint;
typedef unsigned               xluint;
typedef double                 xlreal;
typedef char                   xlbool;
typedef char                   xlchar;
typedef const char *           xltext;
typedef void *                 xlptr;
typedef struct {} /* !ANSIC */ xlrecord, xlmodule;
typedef FILE *                 xlfile;
xlfile xl_getstdfile(int n) {
  switch(n) {
    case 0: return stdin;
    case 1: return stdout;
    case 2: return stderr;
  }
  return NULL;
}
typedef struct Record_1245 {
  xlmodule baserecord_1; /* RecF */
} Record_1245;
Record_1245 xlbuiltins_1246; /* Global */
xlint ret_1272; /* Temp */
xlint ret_1273; /* Temp */
xlint ret_1280; /* Temp */
xlint ret_1281; /* Temp */
xlint koba_1253; /* Global */
xlint kabo_1254; /* Global */
xlint lkabo_1261; /* Global */
xlint kubi_1262; /* Global */
xlreal klonx_1263; /* Global */
typedef xlint (*FnPtr_1268) ( xlint x_1266 , xlint y_1267 ) ;
xlint ajouter_1269 ( xlint x_1266 , xlint y_1267 ) ;
typedef xlint (*FnPtr_1276) ( xlint x_1274 , xlint y_1275 ) ;
xlint soustraire_1277 ( xlint x_1274 , xlint y_1275 ) ;
typedef xlreal (*FnPtr_1284) ( xlreal x_1282 , xlreal y_1283 ) ;
xlreal soustraire_1285 ( xlreal x_1282 , xlreal y_1283 ) ;
xlreal ret_1288; /* Temp */
xlint ajouter_1269 ( xlint x_1266 , xlint y_1267 ) {
xlint ret_1271; /* Temp */
xlint result_1270; /* Result */
ret_1271 = x_1266 + y_1267;
result_1270 = ret_1271;
goto exit_ajouter_1269;
exit_ajouter_1269: 0;
return result_1270;
}
xlint soustraire_1277 ( xlint x_1274 , xlint y_1275 ) {
xlint ret_1279; /* Temp */
xlint result_1278; /* Result */
ret_1279 = y_1275 - x_1274;
result_1278 = ret_1279;
goto exit_soustraire_1277;
exit_soustraire_1277: 0;
return result_1278;
}
xlreal soustraire_1285 ( xlreal x_1282 , xlreal y_1283 ) {
xlreal ret_1287; /* Temp */
xlreal result_1286; /* Result */
ret_1287 = y_1283 - x_1282;
result_1286 = ret_1287;
goto exit_soustraire_1285;
exit_soustraire_1285: 0;
return result_1286;
}
int main(int _argc, char **_argv)
{
xlint ret_1272; /* Temp */
xlint ret_1273; /* Temp */
xlint ret_1280; /* Temp */
xlint ret_1281; /* Temp */
xlreal ret_1288; /* Temp */
ret_1272 = ajouter_1269 ( 1 , 2 );
koba_1253 = ret_1272;
ret_1273 = ajouter_1269 ( 3 , 4 );
kabo_1254 = ret_1273;
ret_1280 = soustraire_1277 ( 3 , 5 );
lkabo_1261 = ret_1280;
ret_1281 = soustraire_1277 ( 6 , 15 );
kubi_1262 = ret_1281;
ret_1288 = soustraire_1285 ( 3.7 , 2.9 );
klonx_1263 = ret_1288;
/* Type */
    /* Main */
    return 0;
}
/*end*/
