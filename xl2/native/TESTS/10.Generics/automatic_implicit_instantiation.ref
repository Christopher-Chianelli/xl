#include <stdio.h>
typedef char                   xlint8;
typedef short                  xlint16;
typedef int                    xlint32;
typedef long long              xlint64;
typedef unsigned char          xluint8;
typedef unsigned short         xluint16;
typedef unsigned int           xluint32;
typedef unsigned long long     xluint64;
typedef float                  xlreal32;
typedef double                 xlreal64;
typedef int                    xlint;
typedef unsigned               xluint;
typedef double                 xlreal;
typedef char                   xlbool;
typedef char                   xlchar;
typedef const char *           xltext;
typedef void *                 xlptr;
typedef struct {} /* !ANSIC */ xlrecord, xlmodule;
typedef FILE *                 xlfile;
xlfile xl_getstdfile(int n) {
  switch(n) {
    case 0: return stdin;
    case 1: return stdout;
    case 2: return stderr;
  }
  return NULL;
}
typedef xlint (*FnPtr_1279) ( xlint low_1277 , xlint high_1278 ) ;
typedef xlint (*FnPtr_1285) ( xlint low_1282 , xlint high_1283 , xlint incr_1284 ) ;
typedef xlreal (*FnPtr_1291) ( xlreal low_1288 , xlreal high_1289 , xlreal incr_1290 ) ;
typedef struct Record_1294 {
  xlmodule baserecord_1; /* RecF */
  FnPtr_1279 iterator_1280; /* RecF */
  FnPtr_1285 iterator_1286; /* RecF */
  FnPtr_1291 iterator_1292; /* RecF */
} Record_1294;
Record_1294 xlbuiltins_1295; /* Global */
xlint ret_1320; /* Temp */
xlint ret_1322; /* Temp */
xlint ret_1323; /* Temp */
xlint ret_1329; /* Temp */
xlint ret_1331; /* Temp */
xlint ret_1332; /* Temp */
xlreal ret_1338; /* Temp */
xlint koba_1302; /* Global */
xlint kabo_1303; /* Global */
xlint lkabo_1310; /* Global */
xlint kubi_1311; /* Global */
xlreal klonx_1312; /* Global */
typedef xlint (*FnPtr_1317) ( xlint x_1315 , xlint y_1316 ) ;
xlint ajouter_1318 ( xlint x_1315 , xlint y_1316 ) ;
typedef xlint (*FnPtr_1326) ( xlint x_1324 , xlint y_1325 ) ;
xlint soustraire_1327 ( xlint x_1324 , xlint y_1325 ) ;
typedef xlreal (*FnPtr_1335) ( xlreal x_1333 , xlreal y_1334 ) ;
xlreal soustraire_1336 ( xlreal x_1333 , xlreal y_1334 ) ;
xlreal ret_1340; /* Temp */
xlint ajouter_1318 ( xlint x_1315 , xlint y_1316 ) {
xlint ret_1321; /* Temp */
xlint result_1319; /* Result */
ret_1320 = 0;
result_1319 = ret_1320;
ret_1321 = x_1315 + y_1316;
result_1319 = ret_1321;
goto exit_ajouter_1318;
exit_ajouter_1318: 0;
return result_1319;
}
xlint soustraire_1327 ( xlint x_1324 , xlint y_1325 ) {
xlint ret_1330; /* Temp */
xlint result_1328; /* Result */
ret_1329 = 0;
result_1328 = ret_1329;
ret_1330 = y_1325 - x_1324;
result_1328 = ret_1330;
goto exit_soustraire_1327;
exit_soustraire_1327: 0;
return result_1328;
}
xlreal soustraire_1336 ( xlreal x_1333 , xlreal y_1334 ) {
xlreal ret_1339; /* Temp */
xlreal result_1337; /* Result */
ret_1338 = 0.0;
result_1337 = ret_1338;
ret_1339 = y_1334 - x_1333;
result_1337 = ret_1339;
goto exit_soustraire_1336;
exit_soustraire_1336: 0;
return result_1337;
}
int main(int _argc, char **_argv)
{
xlint ret_1320; /* Temp */
xlint ret_1322; /* Temp */
xlint ret_1323; /* Temp */
xlint ret_1329; /* Temp */
xlint ret_1331; /* Temp */
xlint ret_1332; /* Temp */
xlreal ret_1338; /* Temp */
xlreal ret_1340; /* Temp */
ret_1322 = ajouter_1318 ( 1 , 2 );
koba_1302 = ret_1322;
ret_1323 = ajouter_1318 ( 3 , 4 );
kabo_1303 = ret_1323;
ret_1331 = soustraire_1327 ( 3 , 5 );
lkabo_1310 = ret_1331;
ret_1332 = soustraire_1327 ( 6 , 15 );
kubi_1311 = ret_1332;
ret_1340 = soustraire_1336 ( 3.7 , 2.9 );
klonx_1312 = ret_1340;
/* Type */
    /* Main */
    return 0;
}
/*end*/
