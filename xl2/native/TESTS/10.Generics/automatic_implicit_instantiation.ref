#include <stdio.h>
typedef char                   xlint8;
typedef short                  xlint16;
typedef int                    xlint32;
typedef long long              xlint64;
typedef unsigned char          xluint8;
typedef unsigned short         xluint16;
typedef unsigned int           xluint32;
typedef unsigned long long     xluint64;
typedef float                  xlreal32;
typedef double                 xlreal64;
typedef int                    xlint;
typedef unsigned               xluint;
typedef double                 xlreal;
typedef char                   xlbool;
typedef char                   xlchar;
typedef const char *           xltext;
typedef void *                 xlptr;
typedef struct {} /* !ANSIC */ xlrecord, xlmodule;
typedef FILE *                 xlfile;
xlfile xl_getstdfile(int n) {
  switch(n) {
    case 0: return stdin;
    case 1: return stdout;
    case 2: return stderr;
  }
  return NULL;
}
typedef struct Record_970 {
  xlmodule baserecord_1; /* RecF */
} Record_970;
Record_970 xlbuiltins_971; /* Global */
xlint ret_997; /* Temp */
xlint ret_998; /* Temp */
xlint ret_1005; /* Temp */
xlint ret_1006; /* Temp */
xlint koba_978; /* Global */
xlint kabo_979; /* Global */
xlint lkabo_986; /* Global */
xlint kubi_987; /* Global */
xlreal klonx_988; /* Global */
typedef xlint (*FnPtr_993) ( xlint x_991 , xlint y_992 ) ;
xlint ajouter_994 ( xlint x_991 , xlint y_992 ) ;
typedef xlint (*FnPtr_1001) ( xlint x_999 , xlint y_1000 ) ;
xlint soustraire_1002 ( xlint x_999 , xlint y_1000 ) ;
typedef xlreal (*FnPtr_1009) ( xlreal x_1007 , xlreal y_1008 ) ;
xlreal soustraire_1010 ( xlreal x_1007 , xlreal y_1008 ) ;
xlreal ret_1013; /* Temp */
xlint ajouter_994 ( xlint x_991 , xlint y_992 ) {
xlint ret_996; /* Temp */
xlint result_995; /* Result */
ret_996 = x_991 + y_992;
result_995 = ret_996;
goto exit_ajouter_994;
exit_ajouter_994: 0;
return result_995;
}
xlint soustraire_1002 ( xlint x_999 , xlint y_1000 ) {
xlint ret_1004; /* Temp */
xlint result_1003; /* Result */
ret_1004 = y_1000 - x_999;
result_1003 = ret_1004;
goto exit_soustraire_1002;
exit_soustraire_1002: 0;
return result_1003;
}
xlreal soustraire_1010 ( xlreal x_1007 , xlreal y_1008 ) {
xlreal ret_1012; /* Temp */
xlreal result_1011; /* Result */
ret_1012 = y_1008 - x_1007;
result_1011 = ret_1012;
goto exit_soustraire_1010;
exit_soustraire_1010: 0;
return result_1011;
}
int main(int _argc, char **_argv)
{
xlint ret_997; /* Temp */
xlint ret_998; /* Temp */
xlint ret_1005; /* Temp */
xlint ret_1006; /* Temp */
xlreal ret_1013; /* Temp */
ret_997 = ajouter_994 ( 1 , 2 );
koba_978 = ret_997;
ret_998 = ajouter_994 ( 3 , 4 );
kabo_979 = ret_998;
ret_1005 = soustraire_1002 ( 3 , 5 );
lkabo_986 = ret_1005;
ret_1006 = soustraire_1002 ( 6 , 15 );
kubi_987 = ret_1006;
ret_1013 = soustraire_1010 ( 3.7 , 2.9 );
klonx_988 = ret_1013;
/* Type */
    /* Main */
    return 0;
}
/*end*/
