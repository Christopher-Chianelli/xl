use XL.POINTER
use XL.POINTER.HEAP
use XL.UI.CONSOLE

type list
type list_ptr is pointer to list

type list is record with
   next  : list_ptr
   value : integer

to PrintList(ptr : list_ptr) is
    Write "List: "
    while ptr <> nil loop
        Write ptr.value, ", "
        ptr := ptr.next
    WriteLn "EOL"

L : list_ptr

WriteLn "Building list"
for I in 1..12 loop
    new : list_ptr := Allocate(40U + unsigned(I)) // Should be enough
    new.next := L
    L := new
    new.value := I
    PrintList L

WriteLn "Expanding list"
for I in 1..12 loop
    new : list_ptr := Allocate(Byte_size(*L)) // Should be enough
    new.next := L
    L := new
    new.value := I
    PrintList L

WriteLn "For reference, byte size=", Byte_Size(*L), " bit size=", Bit_Size(*L)

WriteLn "Destroying list"
P : list_ptr := L
while L <> nil loop
    PrintList L
    P := L.next
    Free L
    L := P

