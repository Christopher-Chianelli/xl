use XL.MATH.COMPLEX
use XL.UI.CONSOLE

function Square(Z : complex) return complex written Z^2 is
    return Z*Z
function Square(X : real) return real written X^2 is
    return X*X

function IsBounded(Z : complex; Bound : real) return boolean is
    return Z.Re^2 + Z.Im^2 < Bound^2

function Depth(Z0, Mu : complex;
               Bound  : real := 1.0E8;
               Max    : integer := 30) return integer is
    Z : complex := Z0
    result := 0
    while result < Max and IsBounded(Z, Bound) loop
        result += 1
        Z := Z^2 - Mu

to Draw_Julia_Set(XLo, XHi, YLo, YHi : real;
                  Mu : complex;
                  NX, NY : integer) is
    StepX : real := (XHi - XLo) / real(NX)
    StepY : real := (YHi - YLo) / real(NY)
    X, Y  : real

    for Y in YLo..YHi step StepY loop
        for X in XLo..XHi step StepX loop
            D : integer := Depth(complex(X, Y), Mu)
            case
               D >= 30:    Write " "
               D > 20:     Write "."
               D > 15:     Write "+"
               D > 10:     Write "*"
               D > 5:      Write "@"
               true:       Write "#"
        WriteLn

Draw_Julia_Set (-1.8, 1.8, -1.8, 1.8, complex(0.75), 79, 50)

