#include <stdio.h>
typedef char                   xlint8;
typedef short                  xlint16;
typedef int                    xlint32;
typedef long long              xlint64;
typedef unsigned char          xluint8;
typedef unsigned short         xluint16;
typedef unsigned int           xluint32;
typedef unsigned long long     xluint64;
typedef float                  xlreal32;
typedef double                 xlreal64;
typedef int                    xlint;
typedef unsigned               xluint;
typedef double                 xlreal;
typedef char                   xlbool;
typedef char                   xlchar;
typedef const char *           xltext;
typedef void *                 xlptr;
typedef struct {} /* !ANSIC */ xlrecord, xlmodule;
typedef FILE *                 xlfile;
xlfile xl_getstdfile(int n) {
  switch(n) {
    case 0: return stdin;
    case 1: return stdout;
    case 2: return stderr;
  }
  return NULL;
}
typedef struct Record_970 {
  xlmodule baserecord_1; /* RecF */
} Record_970;
Record_970 xlbuiltins_971; /* Global */
typedef void (*FnPtr_975) ( xltext msg_972 , xltext file_973 , xlint line_974 ) ;
void myassertionfailure_976 ( xltext msg_972 , xltext file_973 , xlint line_974 ) ;
typedef void (*FnPtr_979) ( xlint x_977 , xlint y_978 ) ;
void testit_980 ( xlint x_977 , xlint y_978 ) ;
void myassertionfailure_976 ( xltext msg_972 , xltext file_973 , xlint line_974 ) {
xlint ret_981; /* Temp */
ret_981 = line_974 - 1;
line_974 = ret_981;
exit_myassertionfailure_976: 0;
}
void testit_980 ( xlint x_977 , xlint y_978 ) {
xlint ret_983; /* Temp */
xlbool ret_984; /* Temp */
xlbool ret_985; /* Temp */
ret_983 = x_977 + y_978;
ret_984 = ret_983 < 34;
ret_985 = !ret_984;
if(!(ret_985)) goto else_if_982;
myassertionfailure_976 ( "X + Y < 34" , "11.Preprocessor/assert_macro.xl" , 27 );
else_if_982: 0;
exit_testit_980: 0;
}
int main(int _argc, char **_argv)
{
    /* Main */
    return 0;
}
/*end*/
