#include <stdio.h>
typedef char                   xlint8;
typedef short                  xlint16;
typedef int                    xlint32;
typedef long long              xlint64;
typedef unsigned char          xluint8;
typedef unsigned short         xluint16;
typedef unsigned int           xluint32;
typedef unsigned long long     xluint64;
typedef float                  xlreal32;
typedef double                 xlreal64;
typedef int                    xlint;
typedef unsigned               xluint;
typedef double                 xlreal;
typedef char                   xlbool;
typedef char                   xlchar;
typedef const char *           xltext;
typedef void *                 xlptr;
typedef struct {}              xlrecord, xlmodule;
typedef FILE *                 xlfile;
typedef struct Record_948 {
  xlmodule base_1;
} Record_948;
Record_948 xlbuiltins_949; /* Global */
typedef void (*FnPtr_953) ( xltext msg_950 , xltext file_951 , xlint line_952 ) ;
void myassertionfailure_954 ( xltext msg_950 , xltext file_951 , xlint line_952 ) ;
typedef void (*FnPtr_957) ( xlint x_955 , xlint y_956 ) ;
void testit_958 ( xlint x_955 , xlint y_956 ) ;
void myassertionfailure_954 ( xltext msg_950 , xltext file_951 , xlint line_952 ) {
xlint ret_959; /* Temp */
ret_959 = line_952 - 1;
line_952 = ret_959;
exit_myassertionfailure_954: 0;
}
void testit_958 ( xlint x_955 , xlint y_956 ) {
xlint ret_961; /* Temp */
xlbool ret_962; /* Temp */
xlbool ret_963; /* Temp */
ret_961 = x_955 + y_956;
ret_962 = ret_961 < 34;
ret_963 = !ret_962;
if(!(ret_963)) goto else_if_960;
myassertionfailure_954 ( "X + Y < 34" , "11.Preprocessor/assert_macro.xl" , 27 );
else_if_960: 0;
exit_testit_958: 0;
}
int main(int _argc, char **_argv)
{
    /* Main */
    return 0;
}
/*end*/
