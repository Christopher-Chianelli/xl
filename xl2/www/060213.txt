<!--Generic written forms-->

It was actually "almost trivial" to add support for generic written
forms. The hardest part was dealing with the various ways you might
want to write that, which result in different parse trees.

Here is an example of use
(from {cvs "TESTS/10.Generics/generic_written_form.xl" "the CVS test"})

{pre}
generic [type item]
type pair
written pair of item
is record with
    first : item
    second: item

K : pair of integer
{erp}

Also, I realized that I had not implemented {tt "while"} loops, so I did
it. And just because I felt like doing a little more this evening, I
also implemented automatic variables, to deduce the type of a variable
from an initialization value, as in:

{pre}
K : variable := 0
L : variable := 0.3
{erp}

This proves useful in generic code, and I believe there is a proposal
to add that to the next revision of C++ (using the {tt "auto"} keyword).

I believe that the new compiler is now at parity, feature-wise, with
the original XL compiler written in C++ and hosted in on
<A href="http://mozart-dev.sf.net">Mozart</A>.



