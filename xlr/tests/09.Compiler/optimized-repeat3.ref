
define internal i1 @xl_eval_write(i8*) {
allocas:
  %1 = call i1 @xl_write_text(i8* %0)
  ret i1 %1
}

define internal i1 @xl_eval_write_with_cr(i8*) {
allocas:
  %1 = call i1 @xl_eval_write(i8* %0)
  %2 = call i1 @xl_write_cr()
  ret i1 %2
}

define i1 @xl_closure(%closure0*) {
allocas:
  %1 = call i1 @xl_eval_write_with_cr(i8* getelementptr inbounds ([10 x i8]* @text2, i32 0, i32 0))
  ret i1 %1
}

define internal i1 @xl_eval_repeat3(%closure0*) {
allocas:
  %1 = call i1 @xl_closure(%closure0* %0)
  %2 = call i1 @xl_closure(%closure0* %0)
  %3 = call i1 @xl_closure(%closure0* %0)
  ret i1 %3
}

define %Tree* @xl_program() {
allocas:
  %0 = alloca %closure0
  %1 = call i1 @xl_eval_write_with_cr(i8* getelementptr inbounds ([12 x i8]* @text1, i32 0, i32 0))
  %2 = getelementptr %closure0* %0, i32 0, i32 0
  store i1 (%closure0*)* @xl_closure, i1 (%closure0*)** %2
  %3 = call i1 @xl_eval_repeat3(%closure0* %0)
  br i1 %3, label %isTrue, label %isFalse

isTrue:                                           ; preds = %allocas
  br label %booleanBoxed

isFalse:                                          ; preds = %allocas
  br label %booleanBoxed

booleanBoxed:                                     ; preds = %isFalse, %isTrue
  %.0.in = phi %Tree** [ @true, %isTrue ], [ @false, %isFalse ]
  %.0 = load %Tree** %.0.in
  ret %Tree* %.0
}
AFTER GLOBAL OPTIMIZATIONS:

define %Tree* @xl_program() {
allocas:
  %0 = tail call i1 @xl_write_text(i8* getelementptr inbounds ([12 x i8]* @text1, i32 0, i32 0))
  %1 = tail call i1 @xl_write_cr()
  %2 = tail call i1 @xl_write_text(i8* getelementptr inbounds ([10 x i8]* @text2, i32 0, i32 0))
  %3 = tail call i1 @xl_write_cr()
  %4 = tail call i1 @xl_write_text(i8* getelementptr inbounds ([10 x i8]* @text2, i32 0, i32 0))
  %5 = tail call i1 @xl_write_cr()
  %6 = tail call i1 @xl_write_text(i8* getelementptr inbounds ([10 x i8]* @text2, i32 0, i32 0))
  %7 = tail call i1 @xl_write_cr()
  %true.val = load %Tree** @true
  %false.val = load %Tree** @false
  %.0 = select i1 %7, %Tree* %true.val, %Tree* %false.val
  ret %Tree* %.0
}
Hello World
Repeating
Repeating
Repeating
true
