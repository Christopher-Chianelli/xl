// *****************************************************************************
// complex-add.xl                                                     XL project
// *****************************************************************************
//
// File description:
//
//
//
//
//
//
//
//
// *****************************************************************************
// This software is licensed under the GNU General Public License v3
// (C) 2009-2010,2019, Christophe de Dinechin <christophe@dinechin.org>
// *****************************************************************************
// This file is part of XL
//
// XL is free software: you can r redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// XL is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with XL, in a file named COPYING.
// If not, see <https://www.gnu.org/licenses/>.
// *****************************************************************************
// Data declaration
data complex(x:value,y:value)

// Basic notations
i -> complex(0,1)
a + i * b -> complex(a,b)
a + b * i -> complex(a,b)

// Basic arithmetic
complex(rx,ix) + complex(ry,iy) -> complex (rx+ry, ix+iy)
complex(rx,ix) - complex(ry,iy) -> complex (rx-ry, ix-iy)
complex(rx,ix) * complex(ry,iy) -> complex (rx*ry-ix*iy, rx*iy+ry*ix)
complex(rx,ix) / complex(ry,iy) ->
    denom -> ry*ry+iy*iy
    rr -> (rx * ry + ix * iy) / denom
    ir -> (ix * ry - rx * iy) / denom
    complex(rr, ir)

// Optimized arithmetic with scalar
complex(rx,ix) * s -> complex(rx*s, ix*s)
complex(rx,ix) / s -> complex(rx/s, ix/s)
s * complex(rx,ix) -> complex(s*rx, s*ix)

// Comparisons
complex(rx,ix) =  complex(ry, iy)  -> rx = ry and ix = iy
complex(rx,ix) <> complex(ry, iy) -> rx <> ry or ix <> iy
complex(rx,ix) <  complex(ry, iy) -> error "No order for complex"
complex(rx,ix) >  complex(ry, iy) -> error "No order for complex"
complex(rx,ix) <= complex(ry, iy) -> error "No order for complex"
complex(rx,ix) >= complex(ry, iy) -> error "No order for complex"

complex(2,3) + complex(5,2)

